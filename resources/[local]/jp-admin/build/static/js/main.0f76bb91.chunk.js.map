{"version":3,"sources":["logo.svg","store.js","sendNUI.jsx","Components/Input.jsx","Components/Autocomplete.jsx","Actions.jsx","Players.jsx","App.js","reportWebVitals.js","index.js"],"names":["useMainStore","create","set","selectedPlayer","undefined","setSelectedPlayer","player","state","itemList","setItemList","adminLevel","setAdminLevel","admin_level","players","setPlayers","plrInputValue","setPlrInputValue","useVariableStore","devtools","variables","setVariable","name","value","inputs","setInput","sendNUI","action","data","mockAnswer","Promise","resolve","fetch","process","method","headers","body","JSON","stringify","then","resp","json","Input","props","style","display","flexDirection","marginTop","title","className","type","id","onChange","e","target","WhiteTextField","withStyles","root","backgroundColor","TextField","AutoInput","Autocomplete","color","options","getOptionLabel","option","event","onInputChange","newValue","renderInput","params","label","variant","size","SmallButton","styled","Button","Disclaimer","marginBottom","1","2","text","ActionButton","onClick","Action","React","useState","isOpen","setOpen","binds","Fragment","level","justifyContent","cursor","userSelect","padding","position","alignItems","NUI","right","paddingTop","background","children","SelectedPlayer","source","citizen_id","character_name","display_name","hex","Actions","setBinds","setBind","useForm","register2","register","handleSubmit2","handleSubmit","register5","handleSubmit5","useEffect","storedBinds","window","localStorage","getItem","parse","phone","faction","group","faction_name","member","rank_name","rank_level","reloadPage","show","banPlayer_days","banPlayer_minutes","banPlayer_hours","days","hours","minutes","reason","banPlayer_reason","secret_reason","banPlayer_secretReason","kickPlayer_reason","teleportToCoords_X","teleportToCoords_Y","teleportToCoords_Z","x","y","z","autoComplete","onSubmit","model","marginLeft","required","message","license","itemId","amount","console","log","selectedWeather","weather","time_hours","time_minutes","Player","Page","errors","watch","formState","reset","width","cid","map","Main","setLoading","minimized","doNuiAction","skipLoading","a","result","page","borderRadius","setPage","Players","App","canShow","updateShow","darkTheme","createTheme","palette","mode","addEventListener","key","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f76bb91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { set } from \"date-fns\";\r\nimport create from \"zustand\";\r\nimport { devtools } from \"zustand/middleware\";\r\n\r\nconst IS_PROD = process.env.NODE_ENV === \"production\";\r\n\r\nlet mainStore = (set) => ({\r\n  selectedPlayer: undefined,\r\n  setSelectedPlayer: (player) => set((state) => ({ selectedPlayer: player })),\r\n  itemList: [],\r\n  setItemList: (itemList) => set((state) => ({ itemList })),\r\n  adminLevel: !IS_PROD ? 100 : false,\r\n  setAdminLevel: (admin_level) => set((state) => ({ adminLevel: admin_level })),\r\n  players: [],\r\n  setPlayers: (players) => set((state) => ({ players })),\r\n  plrInputValue: \"\",\r\n  setPlrInputValue: (plrInputValue) => set((state) => ({ plrInputValue })),\r\n});\r\n\r\nexport const useMainStore = create(mainStore);\r\n\r\nlet variableStore = (set) => ({\r\n  variables: {},\r\n  setVariable: (name, value) =>\r\n    set((state) => ({ variables: { ...state.variables, [name]: value } })),\r\n\r\n  inputs: {},\r\n  setInput: (name, value) =>\r\n    set((state) => ({ inputs: { ...state.inputs, [name]: value } })),\r\n});\r\n\r\nexport const useVariableStore = create(devtools(variableStore));\r\n","const IS_PROD = process.env.NODE_ENV === 'production';\r\n\r\nfunction sendNUI(action, data, mockAnswer) {\r\n  return new Promise((resolve) => {\r\n    if (IS_PROD) {\r\n      fetch(\r\n        `https://${process.env.REACT_APP_RESOURCE_NAME}/nuiAction`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json; charset=UTF-8',\r\n          },\r\n          body: JSON.stringify({\r\n            action,\r\n            data,\r\n          }),\r\n        },\r\n      )\r\n        .then((resp) => resp.json())\r\n        .then((resp) => {\r\n          resolve(resp);\r\n        });\r\n    } else {\r\n      setTimeout(() => {\r\n        resolve(mockAnswer);\r\n      }, 100);\r\n    }\r\n  });\r\n}\r\n\r\nexport default sendNUI;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { useVariableStore } from \"../store\";\r\n\r\nexport const Input = (props) => {\r\n  const { inputs, setInput } = useVariableStore();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"4px\",\r\n        ...props.style,\r\n      }}\r\n    >\r\n      {props.title}:\r\n      <input\r\n        className=\"CustomInput\"\r\n        style={{}}\r\n        type={props.type}\r\n        value={inputs[props.id]}\r\n        onChange={(e) => {\r\n          setInput(props.id, e.target.value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { Autocomplete, TextField } from \"@mui/material\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport \"../App.css\";\r\nimport { useVariableStore } from \"../store\";\r\n\r\nconst WhiteTextField = withStyles({\r\n  root: {\r\n    \"& .MuiOutlinedInput-root.MuiInputBase-sizeSmall\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nexport const AutoInput = (props) => {\r\n  const { inputs, setInput } = useVariableStore();\r\n  const { variables, setVariable } = useVariableStore();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"4px\",\r\n        ...props.style,\r\n      }}\r\n    >\r\n      <Autocomplete\r\n        value={inputs[`${props.id}`]}\r\n        style={{ color: \"white\" }}\r\n        options={props.options}\r\n        getOptionLabel={(option) => {\r\n          if (props.getOptionLabel) {\r\n            return props.getOptionLabel(option);\r\n          } else {\r\n            return option;\r\n          }\r\n        }}\r\n        onChange={(event, value) => {\r\n          setInput(`${props.id}`, value);\r\n        }}\r\n        onInputChange={(e, newValue) => {\r\n          setInput(`inner_${props.id}`, newValue);\r\n        }}\r\n        renderInput={(params) => (\r\n          <WhiteTextField\r\n            {...params}\r\n            label={props.label}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Input } from \"./Components/Input\";\r\nimport { AutoInput } from \"./Components/Autocomplete\";\r\n\r\nimport { useMainStore, useVariableStore } from \"./store\";\r\nimport { styled } from \"@mui/system\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\n\r\nconst SmallButton = styled(Button)`\r\n  width: 300px;\r\n  color: black;\r\n`;\r\n\r\nconst WhiteTextField = withStyles({\r\n  root: {\r\n    \"& .MuiOutlinedInput-root.MuiInputBase-sizeSmall\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst Disclaimer = (props) => {\r\n  const disclaimers = {\r\n    1: \"Isik peab olema linnas!\",\r\n    2: \"Sa pead istuma sõidukis\",\r\n  };\r\n  return (\r\n    <div style={{ color: \"var(--yellow)\", marginBottom: \"8px\" }}>\r\n      {disclaimers[props.id] || props.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ActionButton = (props) => {\r\n  return (\r\n    <SmallButton\r\n      style={{\r\n        marginTop: \"8px\",\r\n        backgroundColor: \"#dedede\",\r\n      }}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </SmallButton>\r\n  );\r\n};\r\n\r\nconst Action = (props) => {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const { adminLevel } = useMainStore();\r\n  const { binds } = useMainStore();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {adminLevel >= props.level && (\r\n        <div className=\"Action\">\r\n          <div className=\"ActionInner\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                cursor: \"pointer\",\r\n                userSelect: \"none\",\r\n                padding: \"8px\",\r\n                position: \"relative\",\r\n                alignItems: \"center\",\r\n              }}\r\n              onClick={() => {\r\n                if (!props.event) {\r\n                  setOpen(!isOpen);\r\n                } else {\r\n                  props.NUI(props.event);\r\n                }\r\n              }}\r\n            >\r\n              <div>{props.name}</div>\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  right: \"1%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                {!props.event ? (\r\n                  isOpen ? (\r\n                    <KeyboardArrowUpIcon />\r\n                  ) : (\r\n                    <KeyboardArrowDownIcon />\r\n                  )\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n            {isOpen && (\r\n              <div\r\n                style={{\r\n                  paddingTop: \"24px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  padding: \"8px\",\r\n                  background:\r\n                    \"linear-gradient(0deg, rgba(81,96,111,1) 0%, rgba(97,116,134,1) 100%)\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {props.children}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst SelectedPlayer = () => {\r\n  const { players } = useMainStore();\r\n\r\n  return (\r\n    <div>\r\n      {/* Selected Player:{\" \"} */}\r\n      {/* {selectedPlayer\r\n        ? `(${selectedPlayer.source}) [${selectedPlayer.citizen_id}] ${selectedPlayer.character_name} | ${selectedPlayer.display_name} | ${selectedPlayer.hex}`\r\n        : \"none\"} */}\r\n      {/* <Autocomplete\r\n        value={selectedPlayer}\r\n        options={players}\r\n        getOptionLabel={(option) =>\r\n          `(${option.source}) [${option.citizen_id}] ${option.character_name} | ${option.display_name} | ${option.hex}`\r\n        }\r\n        onChange={(event, value) => {\r\n          setSelectedPlayer(value);\r\n        }}\r\n        onInputChange={(e, newValue) => {\r\n          setPlrInputValue(newValue);\r\n        }}\r\n        renderInput={(params) => (\r\n          <WhiteTextField\r\n            {...params}\r\n            label=\"Select Target\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        )}\r\n      /> */}\r\n      <AutoInput\r\n        label=\"Select Target\"\r\n        id={\"selectedPlayer\"}\r\n        options={players}\r\n        getOptionLabel={(option) => {\r\n          return `(${option.source}) [${option.citizen_id}] ${option.character_name} | ${option.display_name} | ${option.hex}`;\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Actions = (props) => {\r\n  const { setPlayers } = useMainStore();\r\n  const { binds, setBinds, setBind } = useMainStore();\r\n  const { selectedPlayer, itemList } = useMainStore();\r\n  // const { setSelectedWeather, setWeatherInputValue } = useVariableStore();\r\n  const { variables, setVariable } = useVariableStore();\r\n  const { inputs, setInput } = useVariableStore();\r\n\r\n  const { register: register2, handleSubmit: handleSubmit2 } = useForm();\r\n  const { register: register5, handleSubmit: handleSubmit5 } = useForm();\r\n\r\n  const reloadPage = () => {\r\n    let storedBinds = window.localStorage.getItem(\"binds\");\r\n    if (storedBinds) {\r\n      setBinds(JSON.parse(storedBinds));\r\n    }\r\n\r\n    props\r\n      .NUI(\"fetchPlayersList\", {}, [\r\n        {\r\n          source: 9,\r\n          citizen_id: 3,\r\n          display_name: \"Klicer\",\r\n          character_name: \"Pede Homo\",\r\n          phone: \"1234567\",\r\n          hex: \"steam:12345678\",\r\n          faction: {\r\n            group: { faction_name: \"LSPD\" },\r\n            member: { rank_name: \"Admin\", rank_level: 1000 },\r\n          },\r\n        },\r\n      ])\r\n      .then((resp) => {\r\n        setPlayers(resp);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    reloadPage();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"PageContent\"\r\n      style={{ display: props.show ? \"flex\" : \"none\" }}\r\n    >\r\n      <Action level={1} name=\"Ban\">\r\n        <SelectedPlayer />\r\n        <Input title=\"Days\" id={\"banPlayer_days\"} type=\"number\" />\r\n        <Input title=\"Hours\" id={\"banPlayer_hours\"} type=\"number\" />\r\n        <Input title=\"Minutes\" id={\"banPlayer_minutes\"} type=\"number\" />\r\n        <Input title=\"Reason\" id={\"banPlayer_reason\"} />\r\n        <Input title=\"Secret Reason\" id={\"banPlayer_secretReason\"} />\r\n\r\n        <ActionButton\r\n          text=\"Ban Player\"\r\n          onClick={() => {\r\n            if (\r\n              !inputs.banPlayer_days &&\r\n              !inputs.banPlayer_minutes &&\r\n              !inputs.banPlayer_hours\r\n            ) {\r\n              return;\r\n            }\r\n            if (inputs.selectedPlayer) {\r\n              props.NUI(\"banPlayer\", {\r\n                selectedPlayer: inputs.selectedPlayer,\r\n                days: inputs.banPlayer_days,\r\n                hours: inputs.banPlayer_hours,\r\n                minutes: inputs.banPlayer_minutes,\r\n                reason: inputs.banPlayer_reason,\r\n                secret_reason: inputs.banPlayer_secretReason,\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        {/* <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit3((data) => {\r\n            if (!data.hours && !data.minutes && !data.days) {\r\n              return;\r\n            }\r\n            if (inputs.selectedPlayer) {\r\n              props.NUI(\"banPlayer\", {\r\n                selectedPlayer: inputs.selectedPlayer,\r\n                days: data.days,\r\n                hours: data.hours,\r\n                minutes: data.minutes,\r\n                reason: data.reason,\r\n                secret_reason: data.reason,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Days:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"days\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Hours:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"hours\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Minutes:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"minutes\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Reason:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"reason\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Secret Reason:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"secret_reason\", {})}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"BAN PLAYER\"\r\n            style={{ marginTop: \"8px\" }}\r\n          />\r\n        </form> */}\r\n      </Action>\r\n      <Action level={1} name=\"Kick\">\r\n        <Disclaimer id={1} />\r\n        <SelectedPlayer />\r\n        <Input title=\"Reason\" id={\"kickPlayer_reason\"} />\r\n        <ActionButton\r\n          text=\"Kick Player\"\r\n          onClick={() => {\r\n            if (!inputs.selectedPlayer || !inputs.selectedPlayer.source) {\r\n              return;\r\n            }\r\n            props.NUI(\"kickPlayer\", {\r\n              selectedPlayer: inputs.selectedPlayer,\r\n              reason: inputs.kickPlayer_reason || \"\",\r\n            });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Warn\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={1} name=\"Warnings\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={1} name=\"Slay\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={1} name=\"Bring\">\r\n        <Disclaimer id={1} />\r\n        <SelectedPlayer />\r\n        <ActionButton\r\n          text=\"Bring Player\"\r\n          onClick={() => {\r\n            if (!inputs.selectedPlayer || !inputs.selectedPlayer.source) {\r\n              return;\r\n            }\r\n            props.NUI(\"bringPlayer\", { selectedPlayer: inputs.selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Teleport To Player\">\r\n        <Disclaimer id={1} />\r\n        <SelectedPlayer />\r\n        <ActionButton\r\n          text=\"Teleport To Player\"\r\n          onClick={() => {\r\n            if (!inputs.selectedPlayer || !inputs.selectedPlayer.source) {\r\n              return;\r\n            }\r\n            props.NUI(\"teleportToPlayer\", {\r\n              selectedPlayer: inputs.selectedPlayer,\r\n            });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Teleport To Coords\">\r\n        <Input title=\"X\" id={\"teleportToCoords_X\"} type={\"number\"} />\r\n        <Input title=\"Y\" id={\"teleportToCoords_Y\"} type={\"number\"} />\r\n        <Input title=\"Z\" id={\"teleportToCoords_Z\"} type={\"number\"} />\r\n        <ActionButton\r\n          text=\"Teleport To Coords\"\r\n          onClick={() => {\r\n            if (\r\n              !inputs.teleportToCoords_X ||\r\n              !inputs.teleportToCoords_Y ||\r\n              !inputs.teleportToCoords_Z\r\n            ) {\r\n              return;\r\n            }\r\n\r\n            props.NUI(\"teleportToCoords\", {\r\n              x: inputs.teleportToCoords_X,\r\n              y: inputs.teleportToCoords_Y,\r\n              z: inputs.teleportToCoords_Z,\r\n            });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action\r\n        level={1}\r\n        name=\"Teleport To Marker\"\r\n        event=\"teleportToMarker\"\r\n        NUI={props.NUI}\r\n      />\r\n      <Action\r\n        level={1}\r\n        name=\"Toggle Player Blips\"\r\n        event=\"playerBlips\"\r\n        NUI={props.NUI}\r\n      />\r\n      <Action level={1} name=\"Toggle Noclip\" event=\"noclip\" NUI={props.NUI} />\r\n      <Action level={5} name=\"Unjail\">\r\n        <div style={{ color: \"var(--yellow)\" }}>\r\n          Isik peab olema linnas ja vanglas\r\n        </div>\r\n\r\n        <SelectedPlayer />\r\n        <ActionButton\r\n          text=\"Unjail Player\"\r\n          onClick={() => {\r\n            if (!inputs.selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"unjailPlayer\", {\r\n              selectedPlayer: inputs.selectedPlayer,\r\n            });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={5} name=\"Give Property\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={5} name=\"Give Vehicle\">\r\n        <SelectedPlayer />\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit2((data) => {\r\n            if (inputs.selectedPlayer) {\r\n              props.NUI(\"giveVehicle\", {\r\n                selectedPlayer: inputs.selectedPlayer,\r\n                model: data.model,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Model:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register2(\"model\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"GIVE VEHICLE\"\r\n            style={{ marginTop: \"4px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={5} name=\"Give License\">\r\n        <SelectedPlayer />\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit5((data) => {\r\n            if (inputs.selectedPlayer) {\r\n              props.NUI(\"giveLicense\", {\r\n                selectedPlayer: inputs.selectedPlayer,\r\n                license: data.license,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            License:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register5(\"license\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"GIVE LICENSE\"\r\n            style={{ marginTop: \"4px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={5} name=\"Give Item\">\r\n        <Disclaimer id={1} />\r\n        <SelectedPlayer />\r\n        <AutoInput\r\n          label=\"Item ID\"\r\n          id={\"giveItem_itemId\"}\r\n          options={itemList}\r\n          getOptionLabel={(option) => {\r\n            return `${option.itemId} [${option.label}]`;\r\n          }}\r\n        />\r\n        <Input title=\"Amount\" id={\"giveItem_amount\"} type={\"number\"} />\r\n        <ActionButton\r\n          text=\"Give Item\"\r\n          onClick={() => {\r\n            if (\r\n              !inputs.selectedPlayer ||\r\n              !inputs[\"giveItem_amount\"] ||\r\n              !inputs[\"giveItem_itemId\"]\r\n            ) {\r\n              return;\r\n            }\r\n\r\n            props.NUI(\"giveItem\", {\r\n              selectedPlayer: inputs.selectedPlayer,\r\n              amount: inputs[\"giveItem_amount\"],\r\n              itemId: inputs[\"giveItem_itemId\"]?.itemId,\r\n            });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={5} name=\"Open Inventory\">\r\n        <SelectedPlayer />\r\n        <ActionButton\r\n          text=\"Open Player Inventory\"\r\n          onClick={() => {\r\n            if (!inputs.selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"closeNui\", {}, () => {});\r\n            props.NUI(\"openInventory\", {\r\n              selectedPlayer: inputs.selectedPlayer,\r\n            });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Spawn Vehicle\">\r\n        <Input title=\"Model\" id={\"spawnVehicle_model\"} />\r\n        <ActionButton\r\n          text=\"Spawn Vehicle\"\r\n          onClick={() => {\r\n            if (!inputs[\"spawnVehicle_model\"]) {\r\n              return;\r\n            }\r\n\r\n            props.NUI(\"spawnVehicle\", {\r\n              model: inputs[\"spawnVehicle_model\"],\r\n            });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Vehicle Actions\">\r\n        <Disclaimer id={2} />\r\n        <ActionButton\r\n          text=\"Give Keys\"\r\n          onClick={() => {\r\n            props.NUI(\"giveKeys\");\r\n          }}\r\n        />\r\n        <ActionButton\r\n          text=\"Fix Vehicle\"\r\n          onClick={() => {\r\n            props.NUI(\"fixVehicle\");\r\n          }}\r\n        />\r\n        <ActionButton\r\n          text=\"Delete Vehicle\"\r\n          onClick={() => {\r\n            props.NUI(\"deleteVehicle\");\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Vehicle Data\">\r\n        <div style={{ color: \"var(--yellow)\" }}>Sa pead istuma sõidukis</div>\r\n        <ActionButton\r\n          text=\"Get Vehicle Data\"\r\n          onClick={() => {\r\n            props.NUI(\"getVehicleData\");\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name={`Weather / Time`}>\r\n        <div>\r\n          <AutoInput\r\n            label=\"New Weather\"\r\n            id={\"selectedWeather\"}\r\n            options={[\r\n              \"BLIZZARD\",\r\n              \"CLEAR\",\r\n              \"CLEARING\",\r\n              \"CLOUDS\",\r\n              \"EXTRASUNNY\",\r\n              \"FOGGY\",\r\n              \"HALLOWEEN\",\r\n              \"OVERCAST\",\r\n              \"RAIN\",\r\n              \"SMOG\",\r\n              \"SNOWLIGHT\",\r\n              \"THUNDER\",\r\n              \"XMAS\",\r\n            ]}\r\n          />\r\n          <ActionButton\r\n            text=\"Set Weather\"\r\n            onClick={() => {\r\n              console.log(1);\r\n              if (!inputs.selectedWeather) {\r\n                return;\r\n              }\r\n              console.log(2);\r\n              props.NUI(\"setWeather\", { weather: inputs.selectedWeather });\r\n            }}\r\n          />\r\n        </div>\r\n        <Input\r\n          title=\"Hours\"\r\n          id={\"time_hours\"}\r\n          type={\"number\"}\r\n          style={{ marginTop: \"24px\" }}\r\n        />\r\n        <ActionButton\r\n          text=\"Set Time\"\r\n          onClick={() => {\r\n            if (!inputs.time_hours) return;\r\n\r\n            props.NUI(\"setTime\", {\r\n              hours: inputs.time_hours,\r\n              minutes: inputs.time_minutes,\r\n            });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Revive Player\">\r\n        <Disclaimer id={1} />\r\n        <SelectedPlayer />\r\n        <ActionButton\r\n          text=\"Revive\"\r\n          onClick={() => {\r\n            if (!inputs.selectedPlayer || !inputs.selectedPlayer.source) {\r\n              return;\r\n            }\r\n            props.NUI(\"revivePlayer\", {\r\n              selectedPlayer: inputs.selectedPlayer,\r\n            });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action\r\n        level={1}\r\n        name=\"Revive Nearest\"\r\n        event=\"reviveNearest\"\r\n        NUI={props.NUI}\r\n      />\r\n      <Action level={1} name={`Max Hunger & Thirst`}>\r\n        <Disclaimer id={1} />\r\n        <SelectedPlayer />\r\n        <ActionButton\r\n          text={`Max Hunger & Thirst`}\r\n          onClick={() => {\r\n            if (!inputs.selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"maxHungerAndThirst\", {\r\n              selectedPlayer: inputs.selectedPlayer,\r\n            });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Clothes Menu\">\r\n        <Disclaimer id={1} />\r\n        <SelectedPlayer />\r\n        <ActionButton\r\n          text=\"Open Clothes Menu For Player\"\r\n          onClick={() => {\r\n            if (!inputs.selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"openClothes\", { selectedPlayer: inputs.selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Barber Menu\">\r\n        <Disclaimer id={1} />\r\n        <SelectedPlayer />\r\n        <ActionButton\r\n          text=\"Open Barber Menu For Player\"\r\n          onClick={() => {\r\n            if (!inputs.selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"openBarber\", { selectedPlayer: inputs.selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useMainStore } from \"./store\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\n\r\nconst SmallButton = styled(Button)`\r\n  width: 250px;\r\n  color: black;\r\n`;\r\n\r\nconst ActionButton = (props) => {\r\n  return (\r\n    <SmallButton\r\n      style={{\r\n        marginTop: \"8px\",\r\n        backgroundColor: \"#dedede\",\r\n      }}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </SmallButton>\r\n  );\r\n};\r\n\r\nconst Player = (props) => {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const { player } = { ...props };\r\n\r\n  return (\r\n    <div className=\"Action\">\r\n      <div className=\"ActionInner\">\r\n        <div\r\n          onClick={() => {\r\n            setOpen(!isOpen);\r\n          }}\r\n          style={{\r\n            cursor: \"pointer\",\r\n            userSelect: \"none\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            padding: \"8px\",\r\n          }}\r\n        >\r\n          <div>{`(${player.source}) [${player.citizen_id}] ${player.character_name} | ${player.display_name} | ${player.hex}`}</div>\r\n          {!props.onClick ? (\r\n            isOpen ? (\r\n              <KeyboardArrowUpIcon />\r\n            ) : (\r\n              <KeyboardArrowDownIcon />\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        {isOpen && (\r\n          <div\r\n            style={{\r\n              paddingTop: \"24px\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              padding: \"8px\",\r\n              color: \"white\",\r\n              background:\r\n                \"linear-gradient(0deg, rgba(81,96,111,1) 0%, rgba(97,116,134,1) 100%)\",\r\n            }}\r\n          >\r\n            <div>Phone: {player.phone}</div>\r\n            <div>\r\n              Faction:{\" \"}\r\n              {player.faction\r\n                ? `${player.faction?.group?.faction_name} | [${player.faction?.member?.rank_level}] ${player.faction?.member?.rank_name}`\r\n                : `NO FACTION`}\r\n            </div>\r\n            <ActionButton\r\n              text=\"SELECT\"\r\n              onClick={() => {\r\n                props.setSelectedPlayer(player);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Page = (props) => {\r\n  const { NUI } = { ...props };\r\n  const { selectedPlayer, setSelectedPlayer } = useMainStore();\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const [players, setPlayers] = React.useState(undefined);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const reloadPage = () => {\r\n    setPlayers(undefined);\r\n\r\n    NUI(\"fetchPlayersList\", {}, [\r\n      {\r\n        source: 9,\r\n        citizen_id: 3,\r\n        display_name: \"Klicer\",\r\n        character_name: \"Pede Homo\",\r\n        phone: \"1234567\",\r\n        hex: \"steam:12345678\",\r\n        faction: {\r\n          group: { faction_name: \"LSPD\" },\r\n          member: { rank_name: \"Admin\", rank_level: 1000 },\r\n        },\r\n      },\r\n    ]).then((resp) => {\r\n      console.log(resp);\r\n      setPlayers(resp);\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    reloadPage();\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    NUI(\"selectCharacterFromCID\", { cid: data.cid }).then((data) => {\r\n      setSelectedPlayer(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"PageContent\"\r\n      style={{ display: props.show ? \"flex\" : \"none\" }}\r\n    >\r\n      {players !== undefined && (\r\n        <div\r\n          style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          <div style={{ color: \"white\" }}>\r\n            Selected Player:{\" \"}\r\n            {selectedPlayer\r\n              ? `(${selectedPlayer.source}) [${selectedPlayer.citizen_id}] ${selectedPlayer.character_name} | ${selectedPlayer.display_name} | ${selectedPlayer.hex}`\r\n              : \"none\"}\r\n          </div>\r\n          <form\r\n            style={{\r\n              marginTop: \"16px\",\r\n              marginBottom: \"8px\",\r\n              display: \"flex\",\r\n              color: \"white\",\r\n            }}\r\n            autoComplete=\"off\"\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            Select From CID:\r\n            <input\r\n              style={{ marginLeft: \"4px\" }}\r\n              type=\"number\"\r\n              {...register(\"cid\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"CID on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n            <input type=\"submit\" value=\"SELECT\" style={{ marginLeft: \"4px\" }} />\r\n            {errors[\"cid\"] && (\r\n              <div style={{ color: \"var(--yellow)\", marginLeft: \"4px\" }}>\r\n                {errors[\"cid\"].message}\r\n              </div>\r\n            )}\r\n          </form>\r\n\r\n          {players.map((player) => {\r\n            return (\r\n              <Player player={player} setSelectedPlayer={setSelectedPlayer} />\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport { useMainStore } from \"./store\";\r\nimport sendNUI from \"./sendNUI\";\r\nimport { Button, createTheme } from \"@mui/material\";\r\nimport { ThemeProvider } from \"@mui/private-theming\";\r\n\r\nimport Actions from \"./Actions.jsx\";\r\nimport Players from \"./Players.jsx\";\r\n\r\nconst IS_PROD = process.env.NODE_ENV === \"production\";\r\n\r\nconst Main = (props) => {\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [canShow, updateShow] = React.useState(!IS_PROD);\r\n  const [minimized, setMinimized] = React.useState(false);\r\n\r\n  async function doNuiAction(action, data, mockAnswer, skipLoading) {\r\n    if (!skipLoading) {\r\n      setLoading(true);\r\n    }\r\n\r\n    const result = await sendNUI(action, data, mockAnswer);\r\n\r\n    if (!skipLoading) {\r\n      setLoading(false);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Main\" style={{ width: minimized && \"30%\" }}>\r\n      <div className=\"Categories\">\r\n        <Button\r\n          className=\"CategoryButton\"\r\n          style={{\r\n            backgroundColor: props.page === \"actions\" ? \"#292929\" : \"#3e4652\",\r\n            color: \"white\",\r\n            borderRadius: \"0px\",\r\n          }}\r\n          onClick={() => {\r\n            props.setPage(\"actions\");\r\n          }}\r\n        >\r\n          ACTIONS\r\n        </Button>\r\n        <Button\r\n          className=\"CategoryButton\"\r\n          style={{\r\n            backgroundColor: props.page === \"players\" ? \"#292929\" : \"#3e4652\",\r\n            color: \"white\",\r\n            borderRadius: \"0px\",\r\n          }}\r\n          onClick={() => {\r\n            props.setPage(\"players\");\r\n          }}\r\n        >\r\n          PLAYERS\r\n        </Button>\r\n        <Button\r\n          className=\"CategoryButton\"\r\n          style={{\r\n            backgroundColor: props.page === \"bans\" ? \"#292929\" : \"#3e4652\",\r\n            color: \"white\",\r\n            borderRadius: \"0px\",\r\n          }}\r\n          onClick={() => {\r\n            props.setPage(\"bans\");\r\n          }}\r\n        >\r\n          BANS\r\n        </Button>\r\n      </div>\r\n      <div className=\"Content\">\r\n        <Actions NUI={doNuiAction} show={props.page === \"actions\"} />\r\n        <Players NUI={doNuiAction} show={props.page === \"players\"} />\r\n        {/* <Bans NUI={doNuiAction} show={props.page === \"bans\"} /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const [canShow, updateShow] = React.useState(!IS_PROD);\r\n  const { adminLevel, setAdminLevel, setItemList } = useMainStore();\r\n  const [page, setPage] = React.useState(\"actions\");\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      mode: \"light\",\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"message\", (event) => {\r\n      if (event.data.show !== undefined) {\r\n        updateShow(event.data.show);\r\n      }\r\n      if (event.data.admin_level !== undefined) {\r\n        setAdminLevel(event.data.admin_level);\r\n      }\r\n      if (event.data.setItemList !== undefined) {\r\n        setItemList(event.data.setItemList);\r\n      }\r\n    });\r\n\r\n    window.addEventListener(\"keydown\", (event) => {\r\n      if (event.key === \"Escape\") {\r\n        sendNUI(\"closeNui\", {}, () => {});\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\" style={{ display: canShow ? \"flex\" : \"none\" }}>\r\n      {adminLevel && (\r\n        <ThemeProvider theme={darkTheme}>\r\n          <Main page={page} setPage={setPage} />\r\n        </ThemeProvider>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}