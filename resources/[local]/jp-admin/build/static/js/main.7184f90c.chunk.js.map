{"version":3,"sources":["logo.svg","store.js","sendNUI.jsx","Components/Input.jsx","Components/Autocomplete.jsx","Actions.jsx","Players.jsx","App.js","reportWebVitals.js","index.js"],"names":["useMainStore","create","set","selectedPlayer","undefined","setSelectedPlayer","player","state","itemList","setItemList","adminLevel","setAdminLevel","admin_level","players","setPlayers","plrInputValue","setPlrInputValue","useVariableStore","variables","setVariable","name","value","inputs","setInput","sendNUI","action","data","mockAnswer","Promise","resolve","fetch","process","method","headers","body","JSON","stringify","then","resp","json","Input","props","style","display","flexDirection","marginTop","title","className","type","id","onChange","e","target","WhiteTextField","withStyles","root","backgroundColor","TextField","AutoInput","Autocomplete","color","options","getOptionLabel","option","event","onInputChange","newValue","renderInput","params","label","variant","size","SmallButton","styled","Button","Disclaimer","marginBottom","1","ActionButton","onClick","text","Action","React","useState","isOpen","setOpen","Fragment","level","justifyContent","cursor","userSelect","padding","position","alignItems","right","paddingTop","background","children","SelectedPlayer","source","citizen_id","character_name","display_name","hex","Actions","useEffect","NUI","phone","faction","group","faction_name","member","rank_name","rank_level","useForm","register","handleSubmit","register2","handleSubmit2","register3","handleSubmit3","register4","handleSubmit4","register5","handleSubmit5","register6","handleSubmit6","register8","handleSubmit8","show","autoComplete","onSubmit","hours","minutes","days","reason","secret_reason","marginLeft","model","required","message","license","selectedWeather","weather","min","max","Player","Page","errors","watch","formState","reset","console","log","width","cid","map","Main","setLoading","minimized","doNuiAction","skipLoading","a","result","page","borderRadius","setPage","Players","App","canShow","updateShow","darkTheme","createTheme","palette","mode","window","addEventListener","key","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAAe,I,qCCiBFA,EAAeC,KAbZ,SAACC,GAAD,MAAU,CACxBC,oBAAgBC,EAChBC,kBAAmB,SAACC,GAAD,OAAYJ,GAAI,SAACK,GAAD,MAAY,CAAEJ,eAAgBG,OACjEE,SAAU,GACVC,YAAa,SAACD,GAAD,OAAcN,GAAI,SAACK,GAAD,MAAY,CAAEC,gBAC7CE,YAA6B,EAC7BC,cAAe,SAACC,GAAD,OAAiBV,GAAI,SAACK,GAAD,MAAY,CAAEG,WAAYE,OAC9DC,QAAS,GACTC,WAAY,SAACD,GAAD,OAAaX,GAAI,SAACK,GAAD,MAAY,CAAEM,eAC3CE,cAAe,GACfC,iBAAkB,SAACD,GAAD,OAAmBb,GAAI,SAACK,GAAD,MAAY,CAAEQ,yBAe5CE,EAAmBhB,KAVZ,SAACC,GAAD,MAAU,CAC5BgB,UAAW,GACXC,YAAa,SAACC,EAAMC,GAAP,OACXnB,GAAI,SAACK,GAAD,MAAY,CAAEW,UAAU,2BAAMX,EAAMW,WAAb,kBAAyBE,EAAOC,SAE7DC,OAAQ,GACRC,SAAU,SAACH,EAAMC,GAAP,OACRnB,GAAI,SAACK,GAAD,MAAY,CAAEe,OAAO,2BAAMf,EAAMe,QAAb,kBAAsBF,EAAOC,aCI1CG,I,IAAAA,EA5Bf,SAAiBC,EAAQC,EAAMC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,GAEhBC,MAAM,WAAD,OACQC,WADR,cAEH,CACEC,OAAQ,OACRC,QAAS,CACP,eAAgB,mCAElBC,KAAMC,KAAKC,UAAU,CACnBX,SACAC,WAIHW,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACC,GACLT,EAAQS,U,0DChBLE,EAAQ,SAACC,GAAW,IAAD,EACDxB,IAArBK,EADsB,EACtBA,OAAQC,EADc,EACdA,SAEhB,OACE,sBAAKmB,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,UAAW,OAAnE,UACGJ,EAAMK,MADT,IAEE,uBACEC,UAAU,cACVL,MAAO,GACPM,KAAMP,EAAMO,KACZ3B,MAAOC,EAAOmB,EAAMQ,IACpBC,SAAU,SAACC,GACT5B,EAASkB,EAAMQ,GAAIE,EAAEC,OAAO/B,c,kBCVhCgC,EAAiBC,YAAW,CAChCC,KAAM,CACJ,kDAAmD,CACjDC,gBAAiB,WAHAF,CAMpBG,KAEUC,EAAY,SAACjB,GAAW,IAAD,EACLxB,IADK,KAC1BK,OAD0B,EAClBC,SACmBN,KAA3BC,EAF0B,EAE1BA,UAAWC,EAFe,EAEfA,YAEnB,OACE,qBAAKuB,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,UAAW,OAAnE,SACE,cAACc,EAAA,EAAD,CACEtC,MAAOH,EAAS,0BAChBwB,MAAO,CAAEG,UAAW,MAAOe,MAAO,SAClCC,QAASpB,EAAMoB,QACfC,eAAgB,SAACC,GACf,OAAItB,EAAMqB,eACDrB,EAAMqB,eAAeC,GAErBA,GAGXb,SAAU,SAACc,EAAO3C,GAChBF,EAAY,GAAD,OAAIsB,EAAMQ,IAAM5B,IAE7B4C,cAAe,SAACd,EAAGe,GACjB/C,EAAY,SAAD,OAAUsB,EAAMQ,IAAMiB,IAEnCC,YAAa,SAACC,GAAD,OACX,cAACf,EAAD,2BACMe,GADN,IAEEC,MAAO5B,EAAM4B,MACbC,QAAQ,WACRC,KAAK,QACLlD,MAAO,Y,2CC3BbmD,EAAcC,YAAOC,IAAPD,CAAH,8DAaXE,GARiBrB,YAAW,CAChCC,KAAM,CACJ,kDAAmD,CACjDC,gBAAiB,WAHAF,CAMpBG,KAEgB,SAAChB,GAElB,OACE,qBAAKC,MAAO,CAAEkB,MAAO,gBAAiBgB,aAAc,OAApD,SAFkB,CAAEC,EAAG,2BAGRpC,EAAMQ,QAKnB6B,EAAe,SAACrC,GACpB,OACE,cAAC+B,EAAD,CACE9B,MAAO,CACLG,UAAW,MACXW,gBAAiB,WAEnBuB,QAAStC,EAAMsC,QALjB,SAOGtC,EAAMuC,QAKPC,EAAS,SAACxC,GAAW,IAAD,EACEyC,IAAMC,UAAS,GADjB,mBACjBC,EADiB,KACTC,EADS,KAEhB3E,EAAeV,IAAfU,WAER,OACE,cAAC,IAAM4E,SAAP,UACG5E,GAAc+B,EAAM8C,OACnB,qBAAKxC,UAAU,SAAf,SACE,sBAAKA,UAAU,cAAf,UACE,sBACEL,MAAO,CACLC,QAAS,OACT6C,eAAgB,gBAChBC,OAAQ,UACRC,WAAY,OACZC,QAAS,MACTC,SAAU,WACVC,WAAY,UAEdd,QAAS,WACFtC,EAAMsC,QAGTtC,EAAMsC,UAFNM,GAASD,IAZf,UAkBE,8BAAM3C,EAAMrB,OACZ,qBACEsB,MAAO,CACLkD,SAAU,WACVE,MAAO,KACPnD,QAAS,OACT6C,eAAgB,SAChBK,WAAY,UANhB,SASIpD,EAAMsC,QAON,GANAK,EACE,cAAC,IAAD,IAEA,cAAC,IAAD,SAOPA,GACC,qBACE1C,MAAO,CACLqD,WAAY,OACZpD,QAAS,OACTC,cAAe,SACf+C,QAAS,MACTK,WACE,uEACFpC,MAAO,SARX,SAWGnB,EAAMwD,mBAUjBC,EAAiB,WAAO,IAAD,EAC4BlG,IAAZa,GADhB,EACnBV,eADmB,EACHE,kBADG,EACgBQ,SADhB,EAEiBb,IAFjB,EAEnBe,cAFmB,EAEJC,iBAEvB,OACE,8BA0BE,cAAC,EAAD,CACEqD,MAAM,gBACNpB,GAAI,iBACJY,QAAShD,EACTiD,eAAgB,SAACC,GAAD,iBACVA,EAAOoC,OADG,cACSpC,EAAOqC,WADhB,aAC+BrC,EAAOsC,eADtC,cAC0DtC,EAAOuC,aADjE,cACmFvC,EAAOwC,WAqmBnGC,EA9lBC,SAAC/D,GAAW,IAClB3B,EAAed,IAAfc,WAsBRoE,IAAMuB,WAAU,WApBdhE,EACGiE,IAAI,mBAAoB,GAAI,CAC3B,CACEP,OAAQ,EACRC,WAAY,EACZE,aAAc,SACdD,eAAgB,YAChBM,MAAO,UACPJ,IAAK,iBACLK,QAAS,CACPC,MAAO,CAAEC,aAAc,QACvBC,OAAQ,CAAEC,UAAW,QAASC,WAAY,SAI/C5E,MAAK,SAACC,GACLxB,EAAWwB,QAMd,IAzBsB,MA2BYtC,IAA7BG,EA3BiB,EA2BjBA,eAAgBK,EA3BC,EA2BDA,SA3BC,EA6BUS,IAA3BC,EA7BiB,EA6BjBA,UA7BiB,KA6BNC,YAEgB+F,eA/BV,KA+BjBC,SA/BiB,EA+BPC,aAC2CF,eAA3CG,EAhCO,EAgCjBF,SAAmCG,EAhClB,EAgCIF,aAhCJ,EAiCoCF,cAA3CK,EAjCO,EAiCjBJ,SAAmCK,EAjClB,EAiCIJ,aAjCJ,EAkCoCF,cAA3CO,EAlCO,EAkCjBN,SAAmCO,EAlClB,EAkCIN,aAlCJ,EAmCoCF,cAA3CS,EAnCO,EAmCjBR,SAAmCS,EAnClB,EAmCIR,aAnCJ,EAoCoCF,cAA3CW,EApCO,EAoCjBV,SAAmCW,EApClB,EAoCIV,aApCJ,EAqCoCF,cArCpC,KAqCjBC,SArCiB,EAqCIC,aACgCF,eAA3Ca,EAtCO,EAsCjBZ,SAAmCa,EAtClB,EAsCIZ,aAE7B,OACE,sBACErE,UAAU,cACVL,MAAO,CAAEC,QAASF,EAAMwF,KAAO,OAAS,QAF1C,UAIE,eAAC,EAAD,CAAQ1C,MAAO,EAAGnE,KAAK,MAAvB,UACE,cAAC,EAAD,IACA,uBACE8G,aAAa,MACbxF,MAAO,CAAEG,UAAW,QACpBsF,SAAUX,GAAc,SAAC9F,IAClBA,EAAK0G,OAAU1G,EAAK2G,SAAY3G,EAAK4G,OAGtCnI,GACFsC,EAAMiE,IAAI,YAAa,CACrBvG,iBACAmI,KAAM5G,EAAK4G,KACXF,MAAO1G,EAAK0G,MACZC,QAAS3G,EAAK2G,QACdE,OAAQ7G,EAAK6G,OACbC,cAAe9G,EAAK6G,YAd5B,UAmBE,wCAEE,mCACEvF,KAAK,SACLN,MAAO,CAAE+F,WAAY,QACjBlB,EAAU,OAAQ,SAG1B,sBAAK7E,MAAO,CAAEG,UAAW,OAAzB,mBAEE,mCACEG,KAAK,SACLN,MAAO,CAAE+F,WAAY,QACjBlB,EAAU,QAAS,SAG3B,sBAAK7E,MAAO,CAAEG,UAAW,OAAzB,qBAEE,mCACEG,KAAK,SACLN,MAAO,CAAE+F,WAAY,QACjBlB,EAAU,UAAW,SAG7B,sBAAK7E,MAAO,CAAEG,UAAW,OAAzB,oBAEE,mCACEG,KAAK,OACLN,MAAO,CAAE+F,WAAY,QACjBlB,EAAU,SAAU,SAG5B,sBAAK7E,MAAO,CAAEG,UAAW,OAAzB,2BAEE,mCACEG,KAAK,OACLN,MAAO,CAAE+F,WAAY,QACjBlB,EAAU,gBAAiB,SAGnC,uBACEvE,KAAK,SACL3B,MAAM,aACNqB,MAAO,CAAEG,UAAW,eAI1B,eAAC,EAAD,CAAQ0C,MAAO,EAAGnE,KAAK,OAAvB,UACE,cAAC,EAAD,IACA,qBAAKsB,MAAO,CAAEkB,MAAO,iBAArB,oCACA,uBACEsE,aAAa,MACbxF,MAAO,CAAEG,UAAW,QACpBsF,SAAUT,GAAc,SAAChG,GACnBvB,GAAkBA,EAAegG,QACnC1D,EAAMiE,IAAI,aAAc,CACtBvG,iBACAoI,OAAQ7G,EAAK6G,YAPrB,UAYE,0CAEE,mCACEvF,KAAK,OACLN,MAAO,CAAE+F,WAAY,QACjBhB,EAAU,SAAU,SAG5B,uBACEzE,KAAK,SACL3B,MAAM,cACNqB,MAAO,CAAEG,UAAW,eAI1B,cAAC,EAAD,CAAQ0C,MAAO,EAAGnE,KAAK,OAAvB,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,CAAQmE,MAAO,EAAGnE,KAAK,WAAvB,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,CAAQmE,MAAO,EAAGnE,KAAK,OAAvB,SACE,cAAC,EAAD,MAEF,eAAC,EAAD,CAAQmE,MAAO,EAAGnE,KAAK,QAAvB,UACE,cAAC,EAAD,IACA,qBAAKsB,MAAO,CAAEkB,MAAO,iBAArB,oCACA,cAAC,EAAD,CACEoB,KAAK,eACLD,QAAS,WACF5E,GAAmBA,EAAegG,QAGvC1D,EAAMiE,IAAI,cAAe,CAAEvG,yBAIjC,eAAC,EAAD,CAAQoF,MAAO,EAAGnE,KAAK,qBAAvB,UACE,cAAC,EAAD,IACA,qBAAKsB,MAAO,CAAEkB,MAAO,iBAArB,oCACA,cAAC,EAAD,CACEoB,KAAK,qBACLD,QAAS,WACF5E,GAAmBA,EAAegG,QAGvC1D,EAAMiE,IAAI,mBAAoB,CAAEvG,yBAItC,cAAC,EAAD,CAAQoF,MAAO,EAAGnE,KAAK,qBAAvB,SACE,cAAC,EAAD,CACE4D,KAAK,qBACLD,QAAS,WACPtC,EAAMiE,IAAI,yBAIhB,cAAC,EAAD,CACEnB,MAAO,EACPnE,KAAK,qBACL2D,QAAS,WACPtC,EAAMiE,IAAI,uBAGd,cAAC,EAAD,CACEnB,MAAO,EACPnE,KAAK,sBACL2D,QAAS,WACPtC,EAAMiE,IAAI,kBAGd,cAAC,EAAD,CACEnB,MAAO,EACPnE,KAAK,gBACL2D,QAAS,WACPtC,EAAMiE,IAAI,aAGd,eAAC,EAAD,CAAQnB,MAAO,EAAGnE,KAAK,SAAvB,UACE,cAAC,EAAD,IACA,qBAAKsB,MAAO,CAAEkB,MAAO,iBAArB,+CAGA,cAAC,EAAD,CACEoB,KAAK,gBACLD,QAAS,WACF5E,GAGLsC,EAAMiE,IAAI,eAAgB,CAAEvG,yBAIlC,cAAC,EAAD,CAAQoF,MAAO,EAAGnE,KAAK,gBAAvB,SACE,cAAC,EAAD,MAEF,eAAC,EAAD,CAAQmE,MAAO,EAAGnE,KAAK,eAAvB,UACE,cAAC,EAAD,IACA,uBACE8G,aAAa,MACbxF,MAAO,CAAEG,UAAW,QACpBsF,SAAUb,GAAc,SAAC5F,GACnBvB,GACFsC,EAAMiE,IAAI,cAAe,CACvBvG,iBACAuI,MAAOhH,EAAKgH,WAPpB,UAYE,yCAEE,mCACE1F,KAAK,OACLN,MAAO,CAAE+F,WAAY,QACjBpB,EAAU,QAAS,CACrBsB,SAAU,CACRtH,OAAO,EACPuH,QAAS,iCAKjB,uBACE5F,KAAK,SACL3B,MAAM,eACNqB,MAAO,CAAEG,UAAW,eAI1B,eAAC,EAAD,CAAQ0C,MAAO,EAAGnE,KAAK,eAAvB,UACE,cAAC,EAAD,IACA,uBACE8G,aAAa,MACbxF,MAAO,CAAEG,UAAW,QACpBsF,SAAUP,GAAc,SAAClG,GACnBvB,GACFsC,EAAMiE,IAAI,cAAe,CACvBvG,iBACA0I,QAASnH,EAAKmH,aAPtB,UAYE,2CAEE,mCACE7F,KAAK,OACLN,MAAO,CAAE+F,WAAY,QACjBd,EAAU,UAAW,CACvBgB,SAAU,CACRtH,OAAO,EACPuH,QAAS,iCAKjB,uBACE5F,KAAK,SACL3B,MAAM,eACNqB,MAAO,CAAEG,UAAW,eAI1B,eAAC,EAAD,CAAQ0C,MAAO,EAAGnE,KAAK,YAAvB,UACE,cAAC,EAAD,CAAY6B,GAAI,IAChB,cAAC,EAAD,IACA,cAAC,EAAD,CAAWoB,MAAM,UAAUpB,GAAI,kBAAmBY,QAASrD,IAC3D,cAAC,EAAD,CAAOsC,MAAM,SAASG,GAAI,oBAC1B,cAAC,EAAD,CACE+B,KAAK,YACLD,QAAS,WACF5E,IAGLsC,EAAMiE,IAAI,WAAY,IAAI,eAC1BjE,EAAMiE,IAAI,gBAAiB,CAAEvG,0BAiDnC,eAAC,EAAD,CAAQoF,MAAO,EAAGnE,KAAK,iBAAvB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACE4D,KAAK,wBACLD,QAAS,WACF5E,IAGLsC,EAAMiE,IAAI,WAAY,IAAI,eAC1BjE,EAAMiE,IAAI,gBAAiB,CAAEvG,0BAInC,cAAC,EAAD,CAAQoF,MAAO,EAAGnE,KAAK,gBAAvB,SACE,uBACE8G,aAAa,MACbC,SAAUL,GAAc,SAACpG,GACvBe,EAAMiE,IAAI,eAAgB,CACxBgC,MAAOhH,EAAKgH,WAJlB,UAQE,yCAEE,mCACE1F,KAAK,OACLN,MAAO,CAAE+F,WAAY,QACjBZ,EAAU,QAAS,CACrBc,SAAU,CACRtH,OAAO,EACPuH,QAAS,iCAKjB,uBACE5F,KAAK,SACL3B,MAAM,gBACNqB,MAAO,CAAEG,UAAW,cAI1B,eAAC,EAAD,CAAQ0C,MAAO,EAAGnE,KAAK,kBAAvB,UACE,qBAAKsB,MAAO,CAAEkB,MAAO,iBAArB,wCACA,cAAC,EAAD,CACEoB,KAAK,YACLD,QAAS,WACPtC,EAAMiE,IAAI,eAGd,cAAC,EAAD,CACE1B,KAAK,cACLD,QAAS,WACPtC,EAAMiE,IAAI,iBAGd,cAAC,EAAD,CACE1B,KAAK,iBACLD,QAAS,WACPtC,EAAMiE,IAAI,uBAIhB,eAAC,EAAD,CAAQnB,MAAO,EAAGnE,KAAK,eAAvB,UACE,qBAAKsB,MAAO,CAAEkB,MAAO,iBAArB,wCACA,cAAC,EAAD,CACEoB,KAAK,mBACLD,QAAS,WACPtC,EAAMiE,IAAI,wBAIhB,eAAC,EAAD,CAAQnB,MAAO,EAAGnE,KAAI,iBAAtB,UACE,gCAoCE,cAAC,EAAD,CACEiD,MAAM,cACNpB,GAAI,kBACJY,QAAS,CACP,WACA,QACA,WACA,SACA,aACA,QACA,YACA,WACA,OACA,OACA,YACA,UACA,UAGJ,cAAC,EAAD,CACEmB,KAAK,cACLD,QAAS,WACA7D,EAAU4H,iBAGjBrG,EAAMiE,IAAI,aAAc,CAAEqC,QAAS7H,EAAU4H,wBAInD,uBACEpG,MAAO,CAAEG,UAAW,QACpBqF,aAAa,MACbC,SAAUH,GAAc,SAACtG,GACvBe,EAAMiE,IAAI,UAAW,CACnB0B,MAAO1G,EAAK0G,MACZC,QAAS3G,EAAK2G,aANpB,UAUE,yCAEE,mCACErF,KAAK,OACLN,MAAO,CAAE+F,WAAY,QACjBV,EAAU,QAAS,CACrBY,SAAU,CACRtH,OAAO,EACPuH,QAAS,0BAEXI,IAAK,CACH3H,MAAO,GAET4H,IAAK,CACH5H,MAAO,WAKf,2CAEE,mCACE2B,KAAK,OACLN,MAAO,CAAE+F,WAAY,QACjBV,EAAU,UAAW,CACvBY,SAAU,CACRtH,OAAO,EACPuH,QAAS,0BAEXI,IAAK,CACH3H,MAAO,GAET4H,IAAK,CACH5H,MAAO,WAKf,uBAAO2B,KAAK,SAAS3B,MAAM,WAAWqB,MAAO,CAAEG,UAAW,eAG9D,eAAC,EAAD,CAAQ0C,MAAO,EAAGnE,KAAK,gBAAvB,UACE,cAAC,EAAD,IACA,qBAAKsB,MAAO,CAAEkB,MAAO,iBAArB,oCACA,cAAC,EAAD,CACEoB,KAAK,SACLD,QAAS,WACF5E,GAAmBA,EAAegG,QAGvC1D,EAAMiE,IAAI,eAAgB,CAAEvG,yBAIlC,cAAC,EAAD,CACEoF,MAAO,EACPnE,KAAK,iBACL2D,QAAS,WACPtC,EAAMiE,IAAI,oBAGd,eAAC,EAAD,CAAQnB,MAAO,EAAGnE,KAAI,sBAAtB,UACE,cAAC,EAAD,IACA,qBAAKsB,MAAO,CAAEkB,MAAO,iBAArB,oCACA,cAAC,EAAD,CACEoB,KAAI,sBACJD,QAAS,WACF5E,GAGLsC,EAAMiE,IAAI,qBAAsB,CAAEvG,yBAIxC,eAAC,EAAD,CAAQoF,MAAO,EAAGnE,KAAK,eAAvB,UACE,cAAC,EAAD,IACA,qBAAKsB,MAAO,CAAEkB,MAAO,iBAArB,oCACA,cAAC,EAAD,CACEoB,KAAK,+BACLD,QAAS,WACF5E,GAGLsC,EAAMiE,IAAI,cAAe,CAAEvG,yBAIjC,eAAC,EAAD,CAAQoF,MAAO,EAAGnE,KAAK,cAAvB,UACE,cAAC,EAAD,IACA,qBAAKsB,MAAO,CAAEkB,MAAO,iBAArB,oCACA,cAAC,EAAD,CACEoB,KAAK,8BACLD,QAAS,WACF5E,GAGLsC,EAAMiE,IAAI,aAAc,CAAEvG,6BClvBhCqE,EAAcC,YAAOC,IAAPD,CAAH,8DAKXK,EAAe,SAACrC,GACpB,OACE,cAAC,EAAD,CACEC,MAAO,CACLG,UAAW,MACXW,gBAAiB,WAEnBuB,QAAStC,EAAMsC,QALjB,SAOGtC,EAAMuC,QAKPkE,EAAS,SAACzG,GAAW,IAAD,cACEyC,IAAMC,UAAS,GADjB,mBACjBC,EADiB,KACTC,EADS,KAEhB/E,EAFgB,eAEAmC,GAAhBnC,OAER,OACE,qBAAKyC,UAAU,SAAf,SACE,sBAAKA,UAAU,cAAf,UACE,sBACEgC,QAAS,WACPM,GAASD,IAEX1C,MAAO,CACL+C,OAAQ,UACRC,WAAY,OACZ/C,QAAS,OACT6C,eAAgB,gBAChBG,QAAS,OATb,UAYE,yCAAUrF,EAAO6F,OAAjB,cAA6B7F,EAAO8F,WAApC,aAAmD9F,EAAO+F,eAA1D,cAA8E/F,EAAOgG,aAArF,cAAuGhG,EAAOiG,OAC5G9D,EAAMsC,QAON,GANAK,EACE,cAAC,IAAD,IAEA,cAAC,IAAD,OAMLA,GACC,sBACE1C,MAAO,CACLqD,WAAY,OACZpD,QAAS,OACTC,cAAe,SACf+C,QAAS,MACT/B,MAAO,QACPoC,WACE,wEARN,UAWE,0CAAa1F,EAAOqG,SACpB,2CACW,IACRrG,EAAOsG,QAAP,oBACMtG,EAAOsG,eADb,iBACM,EAAgBC,aADtB,aACM,EAAuBC,aAD7B,yBACgDxG,EAAOsG,eADvD,iBACgD,EAAgBG,cADhE,aACgD,EAAwBE,WADxE,uBACuF3G,EAAOsG,eAD9F,iBACuF,EAAgBG,cADvG,aACuF,EAAwBC,WAD/G,gBAIH,cAAC,EAAD,CACEhC,KAAK,SACLD,QAAS,WACPtC,EAAMpC,kBAAkBC,eAgHzB6I,EAtGF,SAAC1G,GAAW,IACfiE,EADc,eACDjE,GAAbiE,IADc,EAEwB1G,IAAtCG,EAFc,EAEdA,eAAgBE,EAFF,EAEEA,kBAFF,EAGM6E,IAAMC,SAAS,IAHrB,gCAKQD,IAAMC,cAAS/E,IALvB,mBAKfS,EALe,KAKNC,EALM,OAalBoG,cALFC,EARoB,EAQpBA,SACAC,EAToB,EASpBA,aAEagC,GAXO,EAUpBC,MAVoB,EAWpBC,UAAaF,QAXO,EAYpBG,MAyBFrE,IAAMuB,WAAU,WArBd3F,OAAWV,GAEXsG,EAAI,mBAAoB,GAAI,CAC1B,CACEP,OAAQ,EACRC,WAAY,EACZE,aAAc,SACdD,eAAgB,YAChBM,MAAO,UACPJ,IAAK,iBACLK,QAAS,CACPC,MAAO,CAAEC,aAAc,QACvBC,OAAQ,CAAEC,UAAW,QAASC,WAAY,SAG7C5E,MAAK,SAACC,GACPkH,QAAQC,IAAInH,GACZxB,EAAWwB,QAMZ,IAQH,OACE,qBACES,UAAU,cACVL,MAAO,CAAEC,QAASF,EAAMwF,KAAO,OAAS,QAF1C,cAIe7H,IAAZS,GACC,sBACE6B,MAAO,CAAEgH,MAAO,OAAQ/G,QAAS,OAAQC,cAAe,UAD1D,UAGE,sBAAKF,MAAO,CAAEkB,MAAO,SAArB,6BACmB,IAChBzD,EAAc,WACPA,EAAegG,OADR,cACoBhG,EAAeiG,WADnC,aACkDjG,EAAekG,eADjE,cACqFlG,EAAemG,aADpG,cACsHnG,EAAeoG,KAChJ,UAEN,uBACE7D,MAAO,CACLG,UAAW,OACX+B,aAAc,MACdjC,QAAS,OACTiB,MAAO,SAETsE,aAAa,MACbC,SAAUf,GA7BH,SAAC1F,GAChBgF,EAAI,yBAA0B,CAAEiD,IAAKjI,EAAKiI,MAAOtH,MAAK,SAACX,GACrDrB,EAAkBqB,SAmBd,6BAWE,mCACEgB,MAAO,CAAE+F,WAAY,OACrBzF,KAAK,UACDmE,EAAS,MAAO,CAClBwB,SAAU,CACRtH,OAAO,EACPuH,QAAS,0BAIf,uBAAO5F,KAAK,SAAS3B,MAAM,SAASqB,MAAO,CAAE+F,WAAY,SACxDW,EAAM,KACL,qBAAK1G,MAAO,CAAEkB,MAAO,gBAAiB6E,WAAY,OAAlD,SACGW,EAAM,IAAQR,aAKpB/H,EAAQ+I,KAAI,SAACtJ,GACZ,OACE,cAAC,EAAD,CAAQA,OAAQA,EAAQD,kBAAmBA,aC1KnDwJ,EAAO,SAACpH,GAAW,IAAD,EACQyC,IAAMC,UAAS,GADvB,mBACN2E,GADM,aAEQ5E,IAAMC,UAAS,GAFvB,gCAGYD,IAAMC,UAAS,IAH3B,mBAGf4E,EAHe,mBAKPC,EALO,oFAKtB,WAA2BvI,EAAQC,EAAMC,EAAYsI,GAArD,eAAAC,EAAA,6DACOD,GACHH,GAAW,GAFf,SAKuBtI,EAAQC,EAAQC,EAAMC,GAL7C,cAKQwI,EALR,OAOOF,GACHH,GAAW,GARf,kBAWSK,GAXT,4CALsB,sBAkBtB,OACE,sBAAKpH,UAAU,OAAOL,MAAO,CAAEgH,MAAOK,GAAa,OAAnD,UACE,sBAAKhH,UAAU,aAAf,UACE,cAAC2B,EAAA,EAAD,CACE3B,UAAU,iBACVL,MAAO,CACLc,gBAAgC,YAAff,EAAM2H,KAAqB,UAAY,UACxDxG,MAAO,QACPyG,aAAc,OAEhBtF,QAAS,WACPtC,EAAM6H,QAAQ,YARlB,qBAaA,cAAC5F,EAAA,EAAD,CACE3B,UAAU,iBACVL,MAAO,CACLc,gBAAgC,YAAff,EAAM2H,KAAqB,UAAY,UACxDxG,MAAO,QACPyG,aAAc,OAEhBtF,QAAS,WACPtC,EAAM6H,QAAQ,YARlB,qBAaA,cAAC5F,EAAA,EAAD,CACE3B,UAAU,iBACVL,MAAO,CACLc,gBAAgC,SAAff,EAAM2H,KAAkB,UAAY,UACrDxG,MAAO,QACPyG,aAAc,OAEhBtF,QAAS,WACPtC,EAAM6H,QAAQ,SARlB,qBAcF,sBAAKvH,UAAU,UAAf,UACE,cAAC,EAAD,CAAS2D,IAAKsD,EAAa/B,KAAqB,YAAfxF,EAAM2H,OACvC,cAACG,EAAD,CAAS7D,IAAKsD,EAAa/B,KAAqB,YAAfxF,EAAM2H,cAiDhCI,MA1Cf,WAAgB,IAAD,EACiBtF,IAAMC,UAAS,GADhC,mBACNsF,EADM,KACGC,EADH,OAEsC1K,IAA3CU,EAFK,EAELA,WAAYC,EAFP,EAEOA,cAAeF,EAFtB,EAEsBA,YAFtB,EAGWyE,IAAMC,SAAS,WAH1B,mBAGNiF,EAHM,KAGAE,EAHA,KAKPK,EAAYC,YAAY,CAC5BC,QAAS,CACPC,KAAM,WAwBV,OApBA5F,IAAMuB,WAAU,WACdsE,OAAOC,iBAAiB,WAAW,SAAChH,QACV5D,IAApB4D,EAAMtC,KAAKuG,MACbyC,EAAW1G,EAAMtC,KAAKuG,WAEO7H,IAA3B4D,EAAMtC,KAAKd,aACbD,EAAcqD,EAAMtC,KAAKd,kBAEIR,IAA3B4D,EAAMtC,KAAKjB,aACbA,EAAYuD,EAAMtC,KAAKjB,gBAI3BsK,OAAOC,iBAAiB,WAAW,SAAChH,GAChB,WAAdA,EAAMiH,KACRzJ,EAAQ,WAAY,IAAI,oBAG3B,IAGD,qBAAKuB,UAAU,MAAML,MAAO,CAAEC,QAAS8H,EAAU,OAAS,QAA1D,SACG/J,GACC,cAACwK,EAAA,EAAD,CAAeC,MAAOR,EAAtB,SACE,cAAC,EAAD,CAAMP,KAAMA,EAAME,QAASA,SC1GtBc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjJ,MAAK,YAAkD,IAA/CkJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.7184f90c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { set } from \"date-fns\";\r\nimport create from \"zustand\";\r\nconst IS_PROD = process.env.NODE_ENV === \"production\";\r\n\r\nlet mainStore = (set) => ({\r\n  selectedPlayer: undefined,\r\n  setSelectedPlayer: (player) => set((state) => ({ selectedPlayer: player })),\r\n  itemList: [],\r\n  setItemList: (itemList) => set((state) => ({ itemList })),\r\n  adminLevel: !IS_PROD ? 100 : false,\r\n  setAdminLevel: (admin_level) => set((state) => ({ adminLevel: admin_level })),\r\n  players: [],\r\n  setPlayers: (players) => set((state) => ({ players })),\r\n  plrInputValue: \"\",\r\n  setPlrInputValue: (plrInputValue) => set((state) => ({ plrInputValue })),\r\n});\r\n\r\nexport const useMainStore = create(mainStore);\r\n\r\nlet variableStore = (set) => ({\r\n  variables: {},\r\n  setVariable: (name, value) =>\r\n    set((state) => ({ variables: { ...state.variables, [name]: value } })),\r\n\r\n  inputs: {},\r\n  setInput: (name, value) =>\r\n    set((state) => ({ inputs: { ...state.inputs, [name]: value } })),\r\n});\r\n\r\nexport const useVariableStore = create(variableStore);\r\n","const IS_PROD = process.env.NODE_ENV === 'production';\r\n\r\nfunction sendNUI(action, data, mockAnswer) {\r\n  return new Promise((resolve) => {\r\n    if (IS_PROD) {\r\n      fetch(\r\n        `https://${process.env.REACT_APP_RESOURCE_NAME}/nuiAction`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json; charset=UTF-8',\r\n          },\r\n          body: JSON.stringify({\r\n            action,\r\n            data,\r\n          }),\r\n        },\r\n      )\r\n        .then((resp) => resp.json())\r\n        .then((resp) => {\r\n          resolve(resp);\r\n        });\r\n    } else {\r\n      setTimeout(() => {\r\n        resolve(mockAnswer);\r\n      }, 100);\r\n    }\r\n  });\r\n}\r\n\r\nexport default sendNUI;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { useVariableStore } from \"../store\";\r\n\r\nexport const Input = (props) => {\r\n  const { inputs, setInput } = useVariableStore();\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"8px\" }}>\r\n      {props.title}:\r\n      <input\r\n        className=\"CustomInput\"\r\n        style={{}}\r\n        type={props.type}\r\n        value={inputs[props.id]}\r\n        onChange={(e) => {\r\n          setInput(props.id, e.target.value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { Autocomplete, TextField } from \"@mui/material\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport \"../App.css\";\r\nimport { useVariableStore } from \"../store\";\r\n\r\nconst WhiteTextField = withStyles({\r\n  root: {\r\n    \"& .MuiOutlinedInput-root.MuiInputBase-sizeSmall\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nexport const AutoInput = (props) => {\r\n  const { inputs, setInput } = useVariableStore();\r\n  const { variables, setVariable } = useVariableStore();\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"8px\" }}>\r\n      <Autocomplete\r\n        value={variables[\"selectedWeatherInputValue\"]}\r\n        style={{ marginTop: \"4px\", color: \"white\" }}\r\n        options={props.options}\r\n        getOptionLabel={(option) => {\r\n          if (props.getOptionLabel) {\r\n            return props.getOptionLabel(option);\r\n          } else {\r\n            return option;\r\n          }\r\n        }}\r\n        onChange={(event, value) => {\r\n          setVariable(`${props.id}`, value);\r\n        }}\r\n        onInputChange={(e, newValue) => {\r\n          setVariable(`inner_${props.id}`, newValue);\r\n        }}\r\n        renderInput={(params) => (\r\n          <WhiteTextField\r\n            {...params}\r\n            label={props.label}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={\"\"}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Input } from \"./Components/Input\";\r\nimport { AutoInput } from \"./Components/Autocomplete\";\r\n\r\nimport { useMainStore, useVariableStore } from \"./store\";\r\nimport { styled } from \"@mui/system\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\n\r\nconst SmallButton = styled(Button)`\r\n  width: 300px;\r\n  color: black;\r\n`;\r\n\r\nconst WhiteTextField = withStyles({\r\n  root: {\r\n    \"& .MuiOutlinedInput-root.MuiInputBase-sizeSmall\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst Disclaimer = (props) => {\r\n  const disclaimers = { 1: \"Isik peab olema linnas!\" };\r\n  return (\r\n    <div style={{ color: \"var(--yellow)\", marginBottom: \"8px\" }}>\r\n      {disclaimers[props.id]}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ActionButton = (props) => {\r\n  return (\r\n    <SmallButton\r\n      style={{\r\n        marginTop: \"8px\",\r\n        backgroundColor: \"#dedede\",\r\n      }}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </SmallButton>\r\n  );\r\n};\r\n\r\nconst Action = (props) => {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const { adminLevel } = useMainStore();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {adminLevel >= props.level && (\r\n        <div className=\"Action\">\r\n          <div className=\"ActionInner\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                cursor: \"pointer\",\r\n                userSelect: \"none\",\r\n                padding: \"8px\",\r\n                position: \"relative\",\r\n                alignItems: \"center\",\r\n              }}\r\n              onClick={() => {\r\n                if (!props.onClick) {\r\n                  setOpen(!isOpen);\r\n                } else {\r\n                  props.onClick();\r\n                }\r\n              }}\r\n            >\r\n              <div>{props.name}</div>\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  right: \"1%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                {!props.onClick ? (\r\n                  isOpen ? (\r\n                    <KeyboardArrowUpIcon />\r\n                  ) : (\r\n                    <KeyboardArrowDownIcon />\r\n                  )\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n            {isOpen && (\r\n              <div\r\n                style={{\r\n                  paddingTop: \"24px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  padding: \"8px\",\r\n                  background:\r\n                    \"linear-gradient(0deg, rgba(81,96,111,1) 0%, rgba(97,116,134,1) 100%)\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {props.children}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst SelectedPlayer = () => {\r\n  const { selectedPlayer, setSelectedPlayer, players } = useMainStore();\r\n  const { plrInputValue, setPlrInputValue } = useMainStore();\r\n\r\n  return (\r\n    <div>\r\n      {/* Selected Player:{\" \"} */}\r\n      {/* {selectedPlayer\r\n        ? `(${selectedPlayer.source}) [${selectedPlayer.citizen_id}] ${selectedPlayer.character_name} | ${selectedPlayer.display_name} | ${selectedPlayer.hex}`\r\n        : \"none\"} */}\r\n      {/* <Autocomplete\r\n        value={selectedPlayer}\r\n        options={players}\r\n        getOptionLabel={(option) =>\r\n          `(${option.source}) [${option.citizen_id}] ${option.character_name} | ${option.display_name} | ${option.hex}`\r\n        }\r\n        onChange={(event, value) => {\r\n          setSelectedPlayer(value);\r\n        }}\r\n        onInputChange={(e, newValue) => {\r\n          setPlrInputValue(newValue);\r\n        }}\r\n        renderInput={(params) => (\r\n          <WhiteTextField\r\n            {...params}\r\n            label=\"Select Target\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        )}\r\n      /> */}\r\n      <AutoInput\r\n        label=\"Select Target\"\r\n        id={\"selectedPlayer\"}\r\n        options={players}\r\n        getOptionLabel={(option) =>\r\n          `(${option.source}) [${option.citizen_id}] ${option.character_name} | ${option.display_name} | ${option.hex}`\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Actions = (props) => {\r\n  const { setPlayers } = useMainStore();\r\n  const reloadPage = () => {\r\n    props\r\n      .NUI(\"fetchPlayersList\", {}, [\r\n        {\r\n          source: 9,\r\n          citizen_id: 3,\r\n          display_name: \"Klicer\",\r\n          character_name: \"Pede Homo\",\r\n          phone: \"1234567\",\r\n          hex: \"steam:12345678\",\r\n          faction: {\r\n            group: { faction_name: \"LSPD\" },\r\n            member: { rank_name: \"Admin\", rank_level: 1000 },\r\n          },\r\n        },\r\n      ])\r\n      .then((resp) => {\r\n        setPlayers(resp);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    reloadPage();\r\n  }, []);\r\n\r\n  const { selectedPlayer, itemList } = useMainStore();\r\n  // const { setSelectedWeather, setWeatherInputValue } = useVariableStore();\r\n  const { variables, setVariable } = useVariableStore();\r\n\r\n  const { register, handleSubmit } = useForm();\r\n  const { register: register2, handleSubmit: handleSubmit2 } = useForm();\r\n  const { register: register3, handleSubmit: handleSubmit3 } = useForm();\r\n  const { register: register4, handleSubmit: handleSubmit4 } = useForm();\r\n  const { register: register5, handleSubmit: handleSubmit5 } = useForm();\r\n  const { register: register6, handleSubmit: handleSubmit6 } = useForm();\r\n  const { register: register7, handleSubmit: handleSubmit7 } = useForm();\r\n  const { register: register8, handleSubmit: handleSubmit8 } = useForm();\r\n\r\n  return (\r\n    <div\r\n      className=\"PageContent\"\r\n      style={{ display: props.show ? \"flex\" : \"none\" }}\r\n    >\r\n      <Action level={1} name=\"Ban\">\r\n        <SelectedPlayer />\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit3((data) => {\r\n            if (!data.hours && !data.minutes && !data.days) {\r\n              return;\r\n            }\r\n            if (selectedPlayer) {\r\n              props.NUI(\"banPlayer\", {\r\n                selectedPlayer,\r\n                days: data.days,\r\n                hours: data.hours,\r\n                minutes: data.minutes,\r\n                reason: data.reason,\r\n                secret_reason: data.reason,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Days:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"days\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Hours:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"hours\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Minutes:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"minutes\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Reason:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"reason\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Secret Reason:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"secret_reason\", {})}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"BAN PLAYER\"\r\n            style={{ marginTop: \"8px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={1} name=\"Kick\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit4((data) => {\r\n            if (selectedPlayer && selectedPlayer.source) {\r\n              props.NUI(\"kickPlayer\", {\r\n                selectedPlayer,\r\n                reason: data.reason,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Reason:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register4(\"reason\", {})}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"KICK PLAYER\"\r\n            style={{ marginTop: \"8px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={1} name=\"Warn\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={1} name=\"Warnings\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={1} name=\"Slay\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={1} name=\"Bring\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text=\"Bring Player\"\r\n          onClick={() => {\r\n            if (!selectedPlayer || !selectedPlayer.source) {\r\n              return;\r\n            }\r\n            props.NUI(\"bringPlayer\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Teleport To Player\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text=\"Teleport To Player\"\r\n          onClick={() => {\r\n            if (!selectedPlayer || !selectedPlayer.source) {\r\n              return;\r\n            }\r\n            props.NUI(\"teleportToPlayer\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Teleport To Coords\">\r\n        <ActionButton\r\n          text=\"Teleport To Coords\"\r\n          onClick={() => {\r\n            props.NUI(\"teleportToCoords\");\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action\r\n        level={1}\r\n        name=\"Teleport To Marker\"\r\n        onClick={() => {\r\n          props.NUI(\"teleportToMarker\");\r\n        }}\r\n      />\r\n      <Action\r\n        level={1}\r\n        name=\"Toggle Player Blips\"\r\n        onClick={() => {\r\n          props.NUI(\"playerBlips\");\r\n        }}\r\n      />\r\n      <Action\r\n        level={1}\r\n        name=\"Toggle Noclip\"\r\n        onClick={() => {\r\n          props.NUI(\"noclip\");\r\n        }}\r\n      />\r\n      <Action level={5} name=\"Unjail\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>\r\n          Isik peab olema linnas ja vanglas\r\n        </div>\r\n        <ActionButton\r\n          text=\"Unjail Player\"\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"unjailPlayer\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={5} name=\"Give Property\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={5} name=\"Give Vehicle\">\r\n        <SelectedPlayer />\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit2((data) => {\r\n            if (selectedPlayer) {\r\n              props.NUI(\"giveVehicle\", {\r\n                selectedPlayer,\r\n                model: data.model,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Model:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register2(\"model\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"GIVE VEHICLE\"\r\n            style={{ marginTop: \"4px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={5} name=\"Give License\">\r\n        <SelectedPlayer />\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit5((data) => {\r\n            if (selectedPlayer) {\r\n              props.NUI(\"giveLicense\", {\r\n                selectedPlayer,\r\n                license: data.license,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            License:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register5(\"license\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"GIVE LICENSE\"\r\n            style={{ marginTop: \"4px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={5} name=\"Give Item\">\r\n        <Disclaimer id={1} />\r\n        <SelectedPlayer />\r\n        <AutoInput label=\"Item ID\" id={\"giveItem_itemId\"} options={itemList} />\r\n        <Input title=\"Amount\" id={\"giveItem_amount\"} />\r\n        <ActionButton\r\n          text=\"Give Item\"\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"closeNui\", {}, () => {});\r\n            props.NUI(\"openInventory\", { selectedPlayer });\r\n          }}\r\n        />\r\n        {/* <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit((data) => {\r\n            if (selectedPlayer && selectedPlayer.source) {\r\n              props.NUI(\"giveItem\", {\r\n                selectedPlayer,\r\n                amount: data.amount,\r\n                itemId: data.item_id,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Item ID:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register(\"item_id\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Amount:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register(\"amount\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n                max: {\r\n                  value: 100000,\r\n                  message: \"Max 100000\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" value=\"GIVE ITEM\" style={{ marginTop: \"4px\" }} />\r\n        </form> */}\r\n      </Action>\r\n      <Action level={5} name=\"Open Inventory\">\r\n        <SelectedPlayer />\r\n        <ActionButton\r\n          text=\"Open Player Inventory\"\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"closeNui\", {}, () => {});\r\n            props.NUI(\"openInventory\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Spawn Vehicle\">\r\n        <form\r\n          autoComplete=\"off\"\r\n          onSubmit={handleSubmit6((data) => {\r\n            props.NUI(\"spawnVehicle\", {\r\n              model: data.model,\r\n            });\r\n          })}\r\n        >\r\n          <div>\r\n            Model:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register6(\"model\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"SPAWN VEHICLE\"\r\n            style={{ marginTop: \"4px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={1} name=\"Vehicle Actions\">\r\n        <div style={{ color: \"var(--yellow)\" }}>Sa pead istuma sõidukis</div>\r\n        <ActionButton\r\n          text=\"Give Keys\"\r\n          onClick={() => {\r\n            props.NUI(\"giveKeys\");\r\n          }}\r\n        />\r\n        <ActionButton\r\n          text=\"Fix Vehicle\"\r\n          onClick={() => {\r\n            props.NUI(\"fixVehicle\");\r\n          }}\r\n        />\r\n        <ActionButton\r\n          text=\"Delete Vehicle\"\r\n          onClick={() => {\r\n            props.NUI(\"deleteVehicle\");\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Vehicle Data\">\r\n        <div style={{ color: \"var(--yellow)\" }}>Sa pead istuma sõidukis</div>\r\n        <ActionButton\r\n          text=\"Get Vehicle Data\"\r\n          onClick={() => {\r\n            props.NUI(\"getVehicleData\");\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name={`Weather / Time`}>\r\n        <div>\r\n          {/* <div>Selected weather: {variables[\"selectedWeather\"]}</div> */}\r\n          {/* <Autocomplete\r\n            value={variables[\"selectedWeatherInputValue\"]}\r\n            style={{ marginTop: \"4px\", color: \"white\" }}\r\n            options={[\r\n              \"BLIZZARD\",\r\n              \"CLEAR\",\r\n              \"CLEARING\",\r\n              \"CLOUDS\",\r\n              \"EXTRASUNNY\",\r\n              \"FOGGY\",\r\n              \"HALLOWEEN\",\r\n              \"OVERCAST\",\r\n              \"RAIN\",\r\n              \"SMOG\",\r\n              \"SNOWLIGHT\",\r\n              \"THUNDER\",\r\n              \"XMAS\",\r\n            ]}\r\n            getOptionLabel={(option) => option}\r\n            onChange={(event, value) => {\r\n              setVariable(\"selectedWeather\", value);\r\n            }}\r\n            onInputChange={(e, newValue) => {\r\n              setVariable(\"selectedWeatherInputValue\", newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <WhiteTextField\r\n                {...params}\r\n                label=\"New Weather\"\r\n                variant=\"standard\"\r\n                value={\"\"}\r\n              />\r\n            )}\r\n          /> */}\r\n          <AutoInput\r\n            label=\"New Weather\"\r\n            id={\"selectedWeather\"}\r\n            options={[\r\n              \"BLIZZARD\",\r\n              \"CLEAR\",\r\n              \"CLEARING\",\r\n              \"CLOUDS\",\r\n              \"EXTRASUNNY\",\r\n              \"FOGGY\",\r\n              \"HALLOWEEN\",\r\n              \"OVERCAST\",\r\n              \"RAIN\",\r\n              \"SMOG\",\r\n              \"SNOWLIGHT\",\r\n              \"THUNDER\",\r\n              \"XMAS\",\r\n            ]}\r\n          />\r\n          <ActionButton\r\n            text=\"Set Weather\"\r\n            onClick={() => {\r\n              if (!!!variables.selectedWeather) {\r\n                return;\r\n              }\r\n              props.NUI(\"setWeather\", { weather: variables.selectedWeather });\r\n            }}\r\n          />\r\n        </div>\r\n        <form\r\n          style={{ marginTop: \"40px\" }}\r\n          autoComplete=\"off\"\r\n          onSubmit={handleSubmit8((data) => {\r\n            props.NUI(\"setTime\", {\r\n              hours: data.hours,\r\n              minutes: data.minutes,\r\n            });\r\n          })}\r\n        >\r\n          <div>\r\n            Hours:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register8(\"hours\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n                min: {\r\n                  value: 0,\r\n                },\r\n                max: {\r\n                  value: 23,\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <div>\r\n            Minutes:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register8(\"minutes\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n                min: {\r\n                  value: 0,\r\n                },\r\n                max: {\r\n                  value: 59,\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" value=\"SET TIME\" style={{ marginTop: \"4px\" }} />\r\n        </form>\r\n      </Action>\r\n      <Action level={1} name=\"Revive Player\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text=\"Revive\"\r\n          onClick={() => {\r\n            if (!selectedPlayer || !selectedPlayer.source) {\r\n              return;\r\n            }\r\n            props.NUI(\"revivePlayer\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action\r\n        level={1}\r\n        name=\"Revive Nearest\"\r\n        onClick={() => {\r\n          props.NUI(\"reviveNearest\");\r\n        }}\r\n      />\r\n      <Action level={1} name={`Max Hunger & Thirst`}>\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text={`Max Hunger & Thirst`}\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"maxHungerAndThirst\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Clothes Menu\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text=\"Open Clothes Menu For Player\"\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"openClothes\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Barber Menu\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text=\"Open Barber Menu For Player\"\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"openBarber\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useMainStore } from \"./store\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\n\r\nconst SmallButton = styled(Button)`\r\n  width: 250px;\r\n  color: black;\r\n`;\r\n\r\nconst ActionButton = (props) => {\r\n  return (\r\n    <SmallButton\r\n      style={{\r\n        marginTop: \"8px\",\r\n        backgroundColor: \"#dedede\",\r\n      }}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </SmallButton>\r\n  );\r\n};\r\n\r\nconst Player = (props) => {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const { player } = { ...props };\r\n\r\n  return (\r\n    <div className=\"Action\">\r\n      <div className=\"ActionInner\">\r\n        <div\r\n          onClick={() => {\r\n            setOpen(!isOpen);\r\n          }}\r\n          style={{\r\n            cursor: \"pointer\",\r\n            userSelect: \"none\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            padding: \"8px\",\r\n          }}\r\n        >\r\n          <div>{`(${player.source}) [${player.citizen_id}] ${player.character_name} | ${player.display_name} | ${player.hex}`}</div>\r\n          {!props.onClick ? (\r\n            isOpen ? (\r\n              <KeyboardArrowUpIcon />\r\n            ) : (\r\n              <KeyboardArrowDownIcon />\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        {isOpen && (\r\n          <div\r\n            style={{\r\n              paddingTop: \"24px\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              padding: \"8px\",\r\n              color: \"white\",\r\n              background:\r\n                \"linear-gradient(0deg, rgba(81,96,111,1) 0%, rgba(97,116,134,1) 100%)\",\r\n            }}\r\n          >\r\n            <div>Phone: {player.phone}</div>\r\n            <div>\r\n              Faction:{\" \"}\r\n              {player.faction\r\n                ? `${player.faction?.group?.faction_name} | [${player.faction?.member?.rank_level}] ${player.faction?.member?.rank_name}`\r\n                : `NO FACTION`}\r\n            </div>\r\n            <ActionButton\r\n              text=\"SELECT\"\r\n              onClick={() => {\r\n                props.setSelectedPlayer(player);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Page = (props) => {\r\n  const { NUI } = { ...props };\r\n  const { selectedPlayer, setSelectedPlayer } = useMainStore();\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const [players, setPlayers] = React.useState(undefined);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const reloadPage = () => {\r\n    setPlayers(undefined);\r\n\r\n    NUI(\"fetchPlayersList\", {}, [\r\n      {\r\n        source: 9,\r\n        citizen_id: 3,\r\n        display_name: \"Klicer\",\r\n        character_name: \"Pede Homo\",\r\n        phone: \"1234567\",\r\n        hex: \"steam:12345678\",\r\n        faction: {\r\n          group: { faction_name: \"LSPD\" },\r\n          member: { rank_name: \"Admin\", rank_level: 1000 },\r\n        },\r\n      },\r\n    ]).then((resp) => {\r\n      console.log(resp);\r\n      setPlayers(resp);\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    reloadPage();\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    NUI(\"selectCharacterFromCID\", { cid: data.cid }).then((data) => {\r\n      setSelectedPlayer(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"PageContent\"\r\n      style={{ display: props.show ? \"flex\" : \"none\" }}\r\n    >\r\n      {players !== undefined && (\r\n        <div\r\n          style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          <div style={{ color: \"white\" }}>\r\n            Selected Player:{\" \"}\r\n            {selectedPlayer\r\n              ? `(${selectedPlayer.source}) [${selectedPlayer.citizen_id}] ${selectedPlayer.character_name} | ${selectedPlayer.display_name} | ${selectedPlayer.hex}`\r\n              : \"none\"}\r\n          </div>\r\n          <form\r\n            style={{\r\n              marginTop: \"16px\",\r\n              marginBottom: \"8px\",\r\n              display: \"flex\",\r\n              color: \"white\",\r\n            }}\r\n            autoComplete=\"off\"\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            Select From CID:\r\n            <input\r\n              style={{ marginLeft: \"4px\" }}\r\n              type=\"number\"\r\n              {...register(\"cid\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"CID on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n            <input type=\"submit\" value=\"SELECT\" style={{ marginLeft: \"4px\" }} />\r\n            {errors[\"cid\"] && (\r\n              <div style={{ color: \"var(--yellow)\", marginLeft: \"4px\" }}>\r\n                {errors[\"cid\"].message}\r\n              </div>\r\n            )}\r\n          </form>\r\n\r\n          {players.map((player) => {\r\n            return (\r\n              <Player player={player} setSelectedPlayer={setSelectedPlayer} />\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport { useMainStore } from \"./store\";\r\nimport sendNUI from \"./sendNUI\";\r\nimport { Button, createTheme } from \"@mui/material\";\r\nimport { ThemeProvider } from \"@mui/private-theming\";\r\n\r\nimport Actions from \"./Actions.jsx\";\r\nimport Players from \"./Players.jsx\";\r\n\r\nconst IS_PROD = process.env.NODE_ENV === \"production\";\r\n\r\nconst Main = (props) => {\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [canShow, updateShow] = React.useState(!IS_PROD);\r\n  const [minimized, setMinimized] = React.useState(false);\r\n\r\n  async function doNuiAction(action, data, mockAnswer, skipLoading) {\r\n    if (!skipLoading) {\r\n      setLoading(true);\r\n    }\r\n\r\n    const result = await sendNUI(action, data, mockAnswer);\r\n\r\n    if (!skipLoading) {\r\n      setLoading(false);\r\n    }\r\n\r\n    return result;\r\n  }\r\n  return (\r\n    <div className=\"Main\" style={{ width: minimized && \"30%\" }}>\r\n      <div className=\"Categories\">\r\n        <Button\r\n          className=\"CategoryButton\"\r\n          style={{\r\n            backgroundColor: props.page === \"actions\" ? \"#292929\" : \"#3e4652\",\r\n            color: \"white\",\r\n            borderRadius: \"0px\",\r\n          }}\r\n          onClick={() => {\r\n            props.setPage(\"actions\");\r\n          }}\r\n        >\r\n          ACTIONS\r\n        </Button>\r\n        <Button\r\n          className=\"CategoryButton\"\r\n          style={{\r\n            backgroundColor: props.page === \"players\" ? \"#292929\" : \"#3e4652\",\r\n            color: \"white\",\r\n            borderRadius: \"0px\",\r\n          }}\r\n          onClick={() => {\r\n            props.setPage(\"players\");\r\n          }}\r\n        >\r\n          PLAYERS\r\n        </Button>\r\n        <Button\r\n          className=\"CategoryButton\"\r\n          style={{\r\n            backgroundColor: props.page === \"bans\" ? \"#292929\" : \"#3e4652\",\r\n            color: \"white\",\r\n            borderRadius: \"0px\",\r\n          }}\r\n          onClick={() => {\r\n            props.setPage(\"bans\");\r\n          }}\r\n        >\r\n          BANS\r\n        </Button>\r\n      </div>\r\n      <div className=\"Content\">\r\n        <Actions NUI={doNuiAction} show={props.page === \"actions\"} />\r\n        <Players NUI={doNuiAction} show={props.page === \"players\"} />\r\n        {/* <Bans NUI={doNuiAction} show={props.page === \"bans\"} /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const [canShow, updateShow] = React.useState(!IS_PROD);\r\n  const { adminLevel, setAdminLevel, setItemList } = useMainStore();\r\n  const [page, setPage] = React.useState(\"actions\");\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      mode: \"light\",\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"message\", (event) => {\r\n      if (event.data.show !== undefined) {\r\n        updateShow(event.data.show);\r\n      }\r\n      if (event.data.admin_level !== undefined) {\r\n        setAdminLevel(event.data.admin_level);\r\n      }\r\n      if (event.data.setItemList !== undefined) {\r\n        setItemList(event.data.setItemList);\r\n      }\r\n    });\r\n\r\n    window.addEventListener(\"keydown\", (event) => {\r\n      if (event.key === \"Escape\") {\r\n        sendNUI(\"closeNui\", {}, () => {});\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\" style={{ display: canShow ? \"flex\" : \"none\" }}>\r\n      {adminLevel && (\r\n        <ThemeProvider theme={darkTheme}>\r\n          <Main page={page} setPage={setPage} />\r\n        </ThemeProvider>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}