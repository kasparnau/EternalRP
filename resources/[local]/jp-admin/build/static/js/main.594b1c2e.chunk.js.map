{"version":3,"sources":["logo.svg","store.js","sendNUI.jsx","Actions.jsx","Players.jsx","App.js","reportWebVitals.js","index.js"],"names":["useMainStore","create","set","selectedPlayer","undefined","setSelectedPlayer","player","state","adminLevel","setAdminLevel","admin_level","sendNUI","action","data","mockAnswer","Promise","resolve","fetch","process","method","headers","body","JSON","stringify","then","resp","json","ActionButton","props","Button","style","color","backgroundColor","marginTop","onClick","text","Action","React","useState","isOpen","setOpen","Fragment","level","className","display","justifyContent","cursor","userSelect","name","paddingTop","flexDirection","children","SelectedPlayer","source","citizen_id","character_name","display_name","hex","Actions","useForm","register","handleSubmit","register2","handleSubmit2","formState","errors","register3","handleSubmit3","register4","handleSubmit4","show","autoComplete","onSubmit","hours","minutes","days","NUI","type","marginLeft","value","reason","model","required","message","amount","itemId","item_id","max","Player","phone","faction","Page","players","setPlayers","watch","reset","useEffect","console","log","width","marginBottom","cid","map","Main","setLoading","doNuiAction","skipLoading","a","result","page","setPage","Players","App","canShow","updateShow","darkTheme","createTheme","palette","mode","window","addEventListener","event","key","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.594b1c2e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import create from \"zustand\";\r\nconst IS_PROD = process.env.NODE_ENV === \"production\";\r\n\r\nlet mainStore = (set) => ({\r\n  selectedPlayer: undefined,\r\n  setSelectedPlayer: (player) => set((state) => ({ selectedPlayer: player })),\r\n  adminLevel: !IS_PROD ? 100 : false,\r\n  setAdminLevel: (admin_level) => set((state) => ({ adminLevel: admin_level })),\r\n});\r\n\r\nexport const useMainStore = create(mainStore);\r\n","const IS_PROD = process.env.NODE_ENV === 'production';\r\n\r\nfunction sendNUI(action, data, mockAnswer) {\r\n  return new Promise((resolve) => {\r\n    if (IS_PROD) {\r\n      fetch(\r\n        `https://${process.env.REACT_APP_RESOURCE_NAME}/nuiAction`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json; charset=UTF-8',\r\n          },\r\n          body: JSON.stringify({\r\n            action,\r\n            data,\r\n          }),\r\n        },\r\n      )\r\n        .then((resp) => resp.json())\r\n        .then((resp) => {\r\n          resolve(resp);\r\n        });\r\n    } else {\r\n      setTimeout(() => {\r\n        resolve(mockAnswer);\r\n      }, 100);\r\n    }\r\n  });\r\n}\r\n\r\nexport default sendNUI;\r\n","import { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useMainStore } from \"./store\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ActionButton = (props) => {\r\n  return (\r\n    <Button\r\n      style={{\r\n        color: \"white\",\r\n        backgroundColor: \"var(--success)\",\r\n        marginTop: \"8px\",\r\n      }}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst Action = (props) => {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const { adminLevel } = useMainStore();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {adminLevel >= props.level && (\r\n        <div className=\"Action\">\r\n          <div className=\"ActionInner\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                cursor: \"pointer\",\r\n                userSelect: \"none\",\r\n              }}\r\n              onClick={() => {\r\n                setOpen(!isOpen);\r\n              }}\r\n            >\r\n              <div>{props.name}</div>\r\n              <div>{isOpen ? `👇` : `👆`}</div>\r\n            </div>\r\n            {isOpen && (\r\n              <div\r\n                style={{\r\n                  paddingTop: \"24px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                {props.children}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst SelectedPlayer = () => {\r\n  const { selectedPlayer } = useMainStore();\r\n\r\n  return (\r\n    <div>\r\n      Selected Player:{\" \"}\r\n      {selectedPlayer\r\n        ? `(${selectedPlayer.source}) [${selectedPlayer.citizen_id}] ${selectedPlayer.character_name} | ${selectedPlayer.display_name} | ${selectedPlayer.hex}`\r\n        : \"none\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Actions = (props) => {\r\n  const { selectedPlayer } = useMainStore();\r\n\r\n  const { register, handleSubmit } = useForm();\r\n  const {\r\n    register: register2,\r\n    formState: { errors: errors2 },\r\n    handleSubmit: handleSubmit2,\r\n  } = useForm();\r\n  const { register: register3, handleSubmit: handleSubmit3 } = useForm();\r\n  const { register: register4, handleSubmit: handleSubmit4 } = useForm();\r\n\r\n  return (\r\n    <div\r\n      className=\"PageContent\"\r\n      style={{ display: props.show ? \"flex\" : \"none\" }}\r\n    >\r\n      <Action level={1} name=\"Ban\">\r\n        <SelectedPlayer />\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit3((data) => {\r\n            if (!data.hours && !data.minutes && !data.days) {\r\n              return;\r\n            }\r\n            if (selectedPlayer) {\r\n              props.NUI(\"banPlayer\", {\r\n                selectedPlayer,\r\n                days: data.days,\r\n                hours: data.hours,\r\n                minutes: data.minutes,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Days:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"days\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Hours:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"hours\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Minutes:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"minutes\", {})}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"BAN PLAYER\"\r\n            style={{ marginTop: \"8px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={1} name=\"Kick\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit4((data) => {\r\n            if (!data.hours && !data.minutes && !data.days) {\r\n              return;\r\n            }\r\n            if (selectedPlayer && selectedPlayer.source) {\r\n              props.NUI(\"kickPlayer\", {\r\n                selectedPlayer,\r\n                reason: data.reason,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Reason:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register4(\"reason\", {})}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"KICK PLAYER\"\r\n            style={{ marginTop: \"8px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={1} name=\"Warn\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={1} name=\"Warnings\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={1} name=\"Slay\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n\r\n      <Action level={1} name=\"Bring\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={1} name=\"Teleport To\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n\r\n      <Action level={5} name=\"Give Property\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={5} name=\"Give Vehicle\">\r\n        <SelectedPlayer />\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit2((data) => {\r\n            if (selectedPlayer) {\r\n              props.NUI(\"giveVehicle\", {\r\n                selectedPlayer,\r\n                model: data.model,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Model:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register2(\"model\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          {/* <div style={{ marginTop: \"4px\" }}>\r\n            Plate:\r\n            <input\r\n              type=\"text\"\r\n              pattern=\"[a-zA-Z0-9]+\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register2(\"plate\", {\r\n                required: {\r\n                  value: true,\r\n                },\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"Numbrimärk peab olema 8 tähte\",\r\n                },\r\n                maxLength: {\r\n                  value: 8,\r\n                  message: \"Numbrimärk peab olema 8 tähte\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <div> {errors2[\"plate\"] && errors2[\"plate\"].message}</div> */}\r\n          <input\r\n            type=\"submit\"\r\n            value=\"GIVE VEHICLE\"\r\n            style={{ marginTop: \"4px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={5} name=\"Give License\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={5} name=\"Give Item\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit((data) => {\r\n            if (selectedPlayer && selectedPlayer.source) {\r\n              props.NUI(\"giveItem\", {\r\n                selectedPlayer,\r\n                amount: data.amount,\r\n                itemId: data.item_id,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Item ID:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register(\"item_id\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Amount:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register(\"amount\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n                max: {\r\n                  value: 100000,\r\n                  message: \"Max 100000\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" value=\"GIVE ITEM\" style={{ marginTop: \"4px\" }} />\r\n        </form>\r\n      </Action>\r\n      <Action level={5} name=\"Open Inventory\">\r\n        <SelectedPlayer />\r\n        <ActionButton\r\n          text=\"Open Player Inventory\"\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"closeNui\", {}, () => {});\r\n            props.NUI(\"openInventory\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n\r\n      <Action level={1} name=\"Revive Player\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text=\"Revive\"\r\n          onClick={() => {\r\n            if (!selectedPlayer || !selectedPlayer.source) {\r\n              return;\r\n            }\r\n            props.NUI(\"revivePlayer\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name={`Max Hunger & Thirst`}>\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text={`Max Hunger & Thirst`}\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"maxHungerAndThirst\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Clothes Menu\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text=\"Open Clothes Menu For Player\"\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"openClothes\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Barber Menu\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text=\"Open Barber Menu For Player\"\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"openBarber\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Fix Vehicle\">\r\n        <div style={{ color: \"var(--yellow)\" }}>Sa pead olema autos</div>\r\n      </Action>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useMainStore } from \"./store\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ActionButton = (props) => {\r\n  return (\r\n    <Button\r\n      style={{\r\n        color: \"white\",\r\n        backgroundColor: \"var(--success)\",\r\n        marginTop: \"8px\",\r\n      }}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst Player = (props) => {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const { player } = { ...props };\r\n\r\n  return (\r\n    <div className=\"Action\">\r\n      <div className=\"ActionInner\">\r\n        <div\r\n          onClick={() => {\r\n            setOpen(!isOpen);\r\n          }}\r\n          style={{\r\n            cursor: \"pointer\",\r\n            userSelect: \"none\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <div>{`(${player.source}) [${player.citizen_id}] ${player.character_name} | ${player.display_name} | ${player.hex}`}</div>\r\n          <div>{isOpen ? `👇` : `👆`}</div>\r\n        </div>\r\n        {isOpen && (\r\n          <div\r\n            style={{\r\n              paddingTop: \"24px\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <div>Phone: {player.phone}</div>\r\n            <div>Faction: {player.faction}</div>\r\n            <ActionButton\r\n              text=\"SELECT\"\r\n              onClick={() => {\r\n                props.setSelectedPlayer(player);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Page = (props) => {\r\n  const { NUI } = { ...props };\r\n  const { selectedPlayer, setSelectedPlayer } = useMainStore();\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const [players, setPlayers] = React.useState(undefined);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const reloadPage = () => {\r\n    setPlayers(undefined);\r\n\r\n    NUI(\"fetchPlayersList\", {}, [\r\n      {\r\n        source: 9,\r\n        citizen_id: 3,\r\n        display_name: \"Klicer\",\r\n        character_name: \"Pede Homo\",\r\n        phone: \"1234567\",\r\n        hex: \"steam:12345678\",\r\n        faction: \"LSPD\",\r\n      },\r\n    ]).then((resp) => {\r\n      console.log(resp);\r\n      setPlayers(resp);\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    reloadPage();\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    NUI(\"selectCharacterFromCID\", { cid: data.cid }).then((data) => {\r\n      setSelectedPlayer(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"PageContent\"\r\n      style={{ display: props.show ? \"flex\" : \"none\" }}\r\n    >\r\n      {players !== undefined && (\r\n        <div\r\n          style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          <div>\r\n            Selected Player:{\" \"}\r\n            {selectedPlayer\r\n              ? `(${selectedPlayer.source}) [${selectedPlayer.citizen_id}] ${selectedPlayer.character_name} | ${selectedPlayer.display_name} | ${selectedPlayer.hex}`\r\n              : \"none\"}\r\n          </div>\r\n          <form\r\n            style={{ marginTop: \"16px\", marginBottom: \"8px\", display: \"flex\" }}\r\n            autoComplete=\"off\"\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            Select From CID:\r\n            <input\r\n              style={{ marginLeft: \"4px\" }}\r\n              type=\"number\"\r\n              {...register(\"cid\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"CID on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n            <input type=\"submit\" value=\"SELECT\" style={{ marginLeft: \"4px\" }} />\r\n            {errors[\"cid\"] && (\r\n              <div style={{ color: \"var(--yellow)\", marginLeft: \"4px\" }}>\r\n                {errors[\"cid\"].message}\r\n              </div>\r\n            )}\r\n          </form>\r\n\r\n          {players.map((player) => {\r\n            return (\r\n              <Player player={player} setSelectedPlayer={setSelectedPlayer} />\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport { useMainStore } from \"./store\";\r\nimport sendNUI from \"./sendNUI\";\r\nimport { Button, createTheme } from \"@mui/material\";\r\nimport { ThemeProvider } from \"@mui/private-theming\";\r\n\r\nimport Actions from \"./Actions.jsx\";\r\nimport Players from \"./Players.jsx\";\r\n\r\nconst IS_PROD = process.env.NODE_ENV === \"production\";\r\n\r\nconst Main = (props) => {\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [canShow, updateShow] = React.useState(!IS_PROD);\r\n\r\n  async function doNuiAction(action, data, mockAnswer, skipLoading) {\r\n    if (!skipLoading) {\r\n      setLoading(true);\r\n    }\r\n\r\n    const result = await sendNUI(action, data, mockAnswer);\r\n\r\n    if (!skipLoading) {\r\n      setLoading(false);\r\n    }\r\n\r\n    return result;\r\n  }\r\n  return (\r\n    <div className=\"Main\">\r\n      <div className=\"Categories\">\r\n        <Button\r\n          className=\"CategoryButton\"\r\n          style={{\r\n            backgroundColor:\r\n              props.page === \"actions\" ? \"var(--dark)\" : \"var(--primary)\",\r\n            color: \"white\",\r\n          }}\r\n          onClick={() => {\r\n            props.setPage(\"actions\");\r\n          }}\r\n        >\r\n          ACTIONS\r\n        </Button>\r\n        <Button\r\n          className=\"CategoryButton\"\r\n          style={{\r\n            backgroundColor:\r\n              props.page === \"players\" ? \"var(--dark)\" : \"var(--primary)\",\r\n            color: \"white\",\r\n          }}\r\n          onClick={() => {\r\n            props.setPage(\"players\");\r\n          }}\r\n        >\r\n          PLAYERS\r\n        </Button>\r\n        <Button\r\n          className=\"CategoryButton\"\r\n          style={{\r\n            backgroundColor:\r\n              props.page === \"logs\" ? \"var(--dark)\" : \"var(--primary)\",\r\n            color: \"white\",\r\n          }}\r\n          onClick={() => {\r\n            props.setPage(\"logs\");\r\n          }}\r\n        >\r\n          LOGS\r\n        </Button>\r\n      </div>\r\n      <div className=\"Content\">\r\n        <Actions NUI={doNuiAction} show={props.page === \"actions\"} />\r\n        <Players NUI={doNuiAction} show={props.page === \"players\"} />\r\n        {props.page === \"logs\" && <div>LOGID</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const [canShow, updateShow] = React.useState(!IS_PROD);\r\n  const { setAdminLevel } = useMainStore();\r\n  const [page, setPage] = React.useState(\"actions\");\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      mode: \"dark\",\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"message\", (event) => {\r\n      if (event.data.show !== undefined) {\r\n        updateShow(event.data.show);\r\n      }\r\n      if (event.data.admin_level !== undefined) {\r\n        setAdminLevel(event.data.admin_level);\r\n      }\r\n    });\r\n\r\n    window.addEventListener(\"keydown\", (event) => {\r\n      if (event.key === \"Escape\") {\r\n        sendNUI(\"closeNui\", {}, () => {});\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {canShow && (\r\n        <ThemeProvider theme={darkTheme}>\r\n          <Main page={page} setPage={setPage} />\r\n        </ThemeProvider>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}