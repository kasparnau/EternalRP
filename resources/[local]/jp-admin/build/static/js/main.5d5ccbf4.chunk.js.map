{"version":3,"sources":["logo.svg","store.js","sendNUI.jsx","Actions.jsx","Players.jsx","App.js","reportWebVitals.js","index.js"],"names":["useMainStore","create","set","selectedPlayer","undefined","setSelectedPlayer","player","state","adminLevel","setAdminLevel","admin_level","players","setPlayers","plrInputValue","setPlrInputValue","useVariableStore","variables","setVariable","name","value","sendNUI","action","data","mockAnswer","Promise","resolve","fetch","process","method","headers","body","JSON","stringify","then","resp","json","SmallButton","styled","Button","WhiteTextField","withStyles","root","color","TextField","ActionButton","props","style","marginTop","backgroundColor","onClick","text","Action","React","useState","isOpen","setOpen","Fragment","level","className","display","justifyContent","cursor","userSelect","padding","position","alignItems","right","paddingTop","flexDirection","background","children","SelectedPlayer","source","citizen_id","character_name","display_name","hex","Autocomplete","options","getOptionLabel","option","onChange","event","onInputChange","e","newValue","renderInput","params","label","variant","Actions","useEffect","NUI","phone","faction","group","faction_name","member","rank_name","rank_level","useForm","register","handleSubmit","register2","handleSubmit2","register3","handleSubmit3","register4","handleSubmit4","register5","handleSubmit5","register6","handleSubmit6","register8","handleSubmit8","show","autoComplete","onSubmit","hours","minutes","days","reason","secret_reason","type","marginLeft","model","required","message","license","amount","itemId","item_id","max","selectedWeather","weather","min","Player","Page","errors","watch","formState","reset","console","log","width","marginBottom","cid","map","Main","setLoading","minimized","doNuiAction","skipLoading","a","result","page","borderRadius","setPage","Players","App","canShow","updateShow","darkTheme","createTheme","palette","mode","window","addEventListener","key","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d5ccbf4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { set } from \"date-fns\";\r\nimport create from \"zustand\";\r\nconst IS_PROD = process.env.NODE_ENV === \"production\";\r\n\r\nlet mainStore = (set) => ({\r\n  selectedPlayer: undefined,\r\n  setSelectedPlayer: (player) => set((state) => ({ selectedPlayer: player })),\r\n  adminLevel: !IS_PROD ? 100 : false,\r\n  setAdminLevel: (admin_level) => set((state) => ({ adminLevel: admin_level })),\r\n  players: [],\r\n  setPlayers: (players) => set((state) => ({ players })),\r\n  plrInputValue: \"\",\r\n  setPlrInputValue: (plrInputValue) => set((state) => ({ plrInputValue })),\r\n});\r\n\r\nexport const useMainStore = create(mainStore);\r\n\r\nlet variableStore = (set) => ({\r\n  variables: {},\r\n  setVariable: (name, value) =>\r\n    set((state) => ({ variables: { ...state.variables, [name]: value } })),\r\n});\r\n\r\nexport const useVariableStore = create(variableStore);\r\n","const IS_PROD = process.env.NODE_ENV === 'production';\r\n\r\nfunction sendNUI(action, data, mockAnswer) {\r\n  return new Promise((resolve) => {\r\n    if (IS_PROD) {\r\n      fetch(\r\n        `https://${process.env.REACT_APP_RESOURCE_NAME}/nuiAction`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json; charset=UTF-8',\r\n          },\r\n          body: JSON.stringify({\r\n            action,\r\n            data,\r\n          }),\r\n        },\r\n      )\r\n        .then((resp) => resp.json())\r\n        .then((resp) => {\r\n          resolve(resp);\r\n        });\r\n    } else {\r\n      setTimeout(() => {\r\n        resolve(mockAnswer);\r\n      }, 100);\r\n    }\r\n  });\r\n}\r\n\r\nexport default sendNUI;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport { useMainStore, useVariableStore } from \"./store\";\r\nimport { styled } from \"@mui/system\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\n\r\nconst SmallButton = styled(Button)`\r\n  width: 250px;\r\n  color: black;\r\n`;\r\n\r\nconst WhiteTextField = withStyles({\r\n  root: {\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiInputLabel-root\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst ActionButton = (props) => {\r\n  return (\r\n    <SmallButton\r\n      style={{\r\n        marginTop: \"8px\",\r\n        backgroundColor: \"#dedede\",\r\n      }}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </SmallButton>\r\n  );\r\n};\r\n\r\nconst Action = (props) => {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const { adminLevel } = useMainStore();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {adminLevel >= props.level && (\r\n        <div className=\"Action\">\r\n          <div className=\"ActionInner\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                cursor: \"pointer\",\r\n                userSelect: \"none\",\r\n                padding: \"8px\",\r\n                position: \"relative\",\r\n                alignItems: \"center\",\r\n              }}\r\n              onClick={() => {\r\n                if (!props.onClick) {\r\n                  setOpen(!isOpen);\r\n                } else {\r\n                  props.onClick();\r\n                }\r\n              }}\r\n            >\r\n              <div>{props.name}</div>\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  right: \"1%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                {!props.onClick ? (\r\n                  isOpen ? (\r\n                    <KeyboardArrowUpIcon />\r\n                  ) : (\r\n                    <KeyboardArrowDownIcon />\r\n                  )\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n            {isOpen && (\r\n              <div\r\n                style={{\r\n                  paddingTop: \"24px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  padding: \"8px\",\r\n                  background:\r\n                    \"linear-gradient(0deg, rgba(81,96,111,1) 0%, rgba(97,116,134,1) 100%)\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {props.children}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst SelectedPlayer = () => {\r\n  const { selectedPlayer, setSelectedPlayer, players } = useMainStore();\r\n  const { plrInputValue, setPlrInputValue } = useMainStore();\r\n\r\n  return (\r\n    <div>\r\n      Selected Player:{\" \"}\r\n      {selectedPlayer\r\n        ? `(${selectedPlayer.source}) [${selectedPlayer.citizen_id}] ${selectedPlayer.character_name} | ${selectedPlayer.display_name} | ${selectedPlayer.hex}`\r\n        : \"none\"}\r\n      <Autocomplete\r\n        style={{ marginTop: \"4px\" }}\r\n        options={players}\r\n        getOptionLabel={(option) =>\r\n          `(${option.source}) [${option.citizen_id}] ${option.character_name} | ${option.display_name} | ${option.hex}`\r\n        }\r\n        onChange={(event, value) => {\r\n          setSelectedPlayer(value);\r\n        }}\r\n        onInputChange={(e, newValue) => {\r\n          setPlrInputValue(newValue);\r\n        }}\r\n        renderInput={(params) => (\r\n          <WhiteTextField\r\n            {...params}\r\n            label=\"Target Player\"\r\n            variant=\"standard\"\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Actions = (props) => {\r\n  const { setPlayers } = useMainStore();\r\n  const reloadPage = () => {\r\n    props\r\n      .NUI(\"fetchPlayersList\", {}, [\r\n        {\r\n          source: 9,\r\n          citizen_id: 3,\r\n          display_name: \"Klicer\",\r\n          character_name: \"Pede Homo\",\r\n          phone: \"1234567\",\r\n          hex: \"steam:12345678\",\r\n          faction: {\r\n            group: { faction_name: \"LSPD\" },\r\n            member: { rank_name: \"Admin\", rank_level: 1000 },\r\n          },\r\n        },\r\n      ])\r\n      .then((resp) => {\r\n        setPlayers(resp);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    reloadPage();\r\n  }, []);\r\n\r\n  const { selectedPlayer } = useMainStore();\r\n  // const { setSelectedWeather, setWeatherInputValue } = useVariableStore();\r\n  const { variables, setVariable } = useVariableStore();\r\n\r\n  const { register, handleSubmit } = useForm();\r\n  const { register: register2, handleSubmit: handleSubmit2 } = useForm();\r\n  const { register: register3, handleSubmit: handleSubmit3 } = useForm();\r\n  const { register: register4, handleSubmit: handleSubmit4 } = useForm();\r\n  const { register: register5, handleSubmit: handleSubmit5 } = useForm();\r\n  const { register: register6, handleSubmit: handleSubmit6 } = useForm();\r\n  const { register: register7, handleSubmit: handleSubmit7 } = useForm();\r\n  const { register: register8, handleSubmit: handleSubmit8 } = useForm();\r\n\r\n  return (\r\n    <div\r\n      className=\"PageContent\"\r\n      style={{ display: props.show ? \"flex\" : \"none\" }}\r\n    >\r\n      <Action level={1} name=\"Ban\">\r\n        <SelectedPlayer />\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit3((data) => {\r\n            if (!data.hours && !data.minutes && !data.days) {\r\n              return;\r\n            }\r\n            if (selectedPlayer) {\r\n              props.NUI(\"banPlayer\", {\r\n                selectedPlayer,\r\n                days: data.days,\r\n                hours: data.hours,\r\n                minutes: data.minutes,\r\n                reason: data.reason,\r\n                secret_reason: data.reason,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Days:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"days\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Hours:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"hours\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Minutes:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"minutes\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Reason:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"reason\", {})}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Secret Reason:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register3(\"secret_reason\", {})}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"BAN PLAYER\"\r\n            style={{ marginTop: \"8px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={1} name=\"Kick\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit4((data) => {\r\n            if (selectedPlayer && selectedPlayer.source) {\r\n              props.NUI(\"kickPlayer\", {\r\n                selectedPlayer,\r\n                reason: data.reason,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Reason:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register4(\"reason\", {})}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"KICK PLAYER\"\r\n            style={{ marginTop: \"8px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={1} name=\"Warn\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={1} name=\"Warnings\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={1} name=\"Slay\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={1} name=\"Bring\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text=\"Bring Player\"\r\n          onClick={() => {\r\n            if (!selectedPlayer || !selectedPlayer.source) {\r\n              return;\r\n            }\r\n            props.NUI(\"bringPlayer\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Teleport To Player\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text=\"Teleport To Player\"\r\n          onClick={() => {\r\n            if (!selectedPlayer || !selectedPlayer.source) {\r\n              return;\r\n            }\r\n            props.NUI(\"teleportToPlayer\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Teleport To Coords\">\r\n        <ActionButton\r\n          text=\"Teleport To Coords\"\r\n          onClick={() => {\r\n            props.NUI(\"teleportToCoords\");\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action\r\n        level={1}\r\n        name=\"Teleport To Marker\"\r\n        onClick={() => {\r\n          props.NUI(\"teleportToMarker\");\r\n        }}\r\n      />\r\n      <Action\r\n        level={1}\r\n        name=\"Toggle Player Blips\"\r\n        onClick={() => {\r\n          props.NUI(\"playerBlips\");\r\n        }}\r\n      />\r\n      <Action\r\n        level={1}\r\n        name=\"Toggle Noclip\"\r\n        onClick={() => {\r\n          props.NUI(\"noclip\");\r\n        }}\r\n      />\r\n      <Action level={5} name=\"Unjail\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>\r\n          Isik peab olema linnas ja vanglas\r\n        </div>\r\n        <ActionButton\r\n          text=\"Unjail Player\"\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"unjailPlayer\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={5} name=\"Give Property\">\r\n        <SelectedPlayer />\r\n      </Action>\r\n      <Action level={5} name=\"Give Vehicle\">\r\n        <SelectedPlayer />\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit2((data) => {\r\n            if (selectedPlayer) {\r\n              props.NUI(\"giveVehicle\", {\r\n                selectedPlayer,\r\n                model: data.model,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Model:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register2(\"model\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"GIVE VEHICLE\"\r\n            style={{ marginTop: \"4px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={5} name=\"Give License\">\r\n        <SelectedPlayer />\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit5((data) => {\r\n            if (selectedPlayer) {\r\n              props.NUI(\"giveLicense\", {\r\n                selectedPlayer,\r\n                license: data.license,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            License:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register5(\"license\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"GIVE LICENSE\"\r\n            style={{ marginTop: \"4px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={5} name=\"Give Item\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <form\r\n          autoComplete=\"off\"\r\n          style={{ marginTop: \"16px\" }}\r\n          onSubmit={handleSubmit((data) => {\r\n            if (selectedPlayer && selectedPlayer.source) {\r\n              props.NUI(\"giveItem\", {\r\n                selectedPlayer,\r\n                amount: data.amount,\r\n                itemId: data.item_id,\r\n              });\r\n            }\r\n          })}\r\n        >\r\n          <div>\r\n            Item ID:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register(\"item_id\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: \"4px\" }}>\r\n            Amount:\r\n            <input\r\n              type=\"number\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register(\"amount\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n                max: {\r\n                  value: 100000,\r\n                  message: \"Max 100000\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" value=\"GIVE ITEM\" style={{ marginTop: \"4px\" }} />\r\n        </form>\r\n      </Action>\r\n      <Action level={5} name=\"Open Inventory\">\r\n        <SelectedPlayer />\r\n        <ActionButton\r\n          text=\"Open Player Inventory\"\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"closeNui\", {}, () => {});\r\n            props.NUI(\"openInventory\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Spawn Vehicle\">\r\n        <form\r\n          autoComplete=\"off\"\r\n          onSubmit={handleSubmit6((data) => {\r\n            props.NUI(\"spawnVehicle\", {\r\n              model: data.model,\r\n            });\r\n          })}\r\n        >\r\n          <div>\r\n            Model:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register6(\"model\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"SPAWN VEHICLE\"\r\n            style={{ marginTop: \"4px\" }}\r\n          />\r\n        </form>\r\n      </Action>\r\n      <Action level={1} name=\"Vehicle Actions\">\r\n        <div style={{ color: \"var(--yellow)\" }}>Sa pead istuma sõidukis</div>\r\n        <ActionButton\r\n          text=\"Give Keys\"\r\n          onClick={() => {\r\n            props.NUI(\"giveKeys\");\r\n          }}\r\n        />\r\n        <ActionButton\r\n          text=\"Fix Vehicle\"\r\n          onClick={() => {\r\n            props.NUI(\"fixVehicle\");\r\n          }}\r\n        />\r\n        <ActionButton\r\n          text=\"Delete Vehicle\"\r\n          onClick={() => {\r\n            props.NUI(\"deleteVehicle\");\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Vehicle Data\">\r\n        <div style={{ color: \"var(--yellow)\" }}>Sa pead istuma sõidukis</div>\r\n        <ActionButton\r\n          text=\"Get Vehicle Data\"\r\n          onClick={() => {\r\n            props.NUI(\"getVehicleData\");\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name={`Weather / Time`}>\r\n        <div>\r\n          {/* <div>Selected weather: {variables[\"selectedWeather\"]}</div> */}\r\n          <Autocomplete\r\n            value={variables[\"selectedWeatherInputValue\"]}\r\n            style={{ marginTop: \"4px\", color: \"white\" }}\r\n            options={[\r\n              \"BLIZZARD\",\r\n              \"CLEAR\",\r\n              \"CLEARING\",\r\n              \"CLOUDS\",\r\n              \"EXTRASUNNY\",\r\n              \"FOGGY\",\r\n              \"HALLOWEEN\",\r\n              \"OVERCAST\",\r\n              \"RAIN\",\r\n              \"SMOG\",\r\n              \"SNOWLIGHT\",\r\n              \"THUNDER\",\r\n              \"XMAS\",\r\n            ]}\r\n            getOptionLabel={(option) => option}\r\n            onChange={(event, value) => {\r\n              setVariable(\"selectedWeather\", value);\r\n            }}\r\n            onInputChange={(e, newValue) => {\r\n              setVariable(\"selectedWeatherInputValue\", newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <WhiteTextField\r\n                {...params}\r\n                label=\"New Weather\"\r\n                variant=\"standard\"\r\n                value={\"\"}\r\n              />\r\n            )}\r\n          />\r\n          <ActionButton\r\n            text=\"Set Weather\"\r\n            onClick={() => {\r\n              if (!!!variables.selectedWeather) {\r\n                return;\r\n              }\r\n              props.NUI(\"setWeather\", { weather: variables.selectedWeather });\r\n            }}\r\n          />\r\n        </div>\r\n        <form\r\n          style={{ marginTop: \"40px\" }}\r\n          autoComplete=\"off\"\r\n          onSubmit={handleSubmit8((data) => {\r\n            props.NUI(\"setTime\", {\r\n              hours: data.hours,\r\n              minutes: data.minutes,\r\n            });\r\n          })}\r\n        >\r\n          <div>\r\n            Hours:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register8(\"hours\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n                min: {\r\n                  value: 0,\r\n                },\r\n                max: {\r\n                  value: 23,\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <div>\r\n            Minutes:\r\n            <input\r\n              type=\"text\"\r\n              style={{ marginLeft: \"4px\" }}\r\n              {...register8(\"minutes\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Väli on tühi :/!\",\r\n                },\r\n                min: {\r\n                  value: 0,\r\n                },\r\n                max: {\r\n                  value: 59,\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" value=\"SET TIME\" style={{ marginTop: \"4px\" }} />\r\n        </form>\r\n      </Action>\r\n      <Action level={1} name=\"Revive Player\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text=\"Revive\"\r\n          onClick={() => {\r\n            if (!selectedPlayer || !selectedPlayer.source) {\r\n              return;\r\n            }\r\n            props.NUI(\"revivePlayer\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action\r\n        level={1}\r\n        name=\"Revive Nearest\"\r\n        onClick={() => {\r\n          props.NUI(\"reviveNearest\");\r\n        }}\r\n      />\r\n      <Action level={1} name={`Max Hunger & Thirst`}>\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text={`Max Hunger & Thirst`}\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"maxHungerAndThirst\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Clothes Menu\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text=\"Open Clothes Menu For Player\"\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"openClothes\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n      <Action level={1} name=\"Barber Menu\">\r\n        <SelectedPlayer />\r\n        <div style={{ color: \"var(--yellow)\" }}>Isik peab olema linnas</div>\r\n        <ActionButton\r\n          text=\"Open Barber Menu For Player\"\r\n          onClick={() => {\r\n            if (!selectedPlayer) {\r\n              return;\r\n            }\r\n            props.NUI(\"openBarber\", { selectedPlayer });\r\n          }}\r\n        />\r\n      </Action>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useMainStore } from \"./store\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\n\r\nconst SmallButton = styled(Button)`\r\n  width: 250px;\r\n  color: black;\r\n`;\r\n\r\nconst ActionButton = (props) => {\r\n  return (\r\n    <SmallButton\r\n      style={{\r\n        marginTop: \"8px\",\r\n        backgroundColor: \"#dedede\",\r\n      }}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </SmallButton>\r\n  );\r\n};\r\n\r\nconst Player = (props) => {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const { player } = { ...props };\r\n\r\n  return (\r\n    <div className=\"Action\">\r\n      <div className=\"ActionInner\">\r\n        <div\r\n          onClick={() => {\r\n            setOpen(!isOpen);\r\n          }}\r\n          style={{\r\n            cursor: \"pointer\",\r\n            userSelect: \"none\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            padding: \"8px\",\r\n          }}\r\n        >\r\n          <div>{`(${player.source}) [${player.citizen_id}] ${player.character_name} | ${player.display_name} | ${player.hex}`}</div>\r\n          {!props.onClick ? (\r\n            isOpen ? (\r\n              <KeyboardArrowUpIcon />\r\n            ) : (\r\n              <KeyboardArrowDownIcon />\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        {isOpen && (\r\n          <div\r\n            style={{\r\n              paddingTop: \"24px\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              padding: \"8px\",\r\n              color: \"white\",\r\n              background:\r\n                \"linear-gradient(0deg, rgba(81,96,111,1) 0%, rgba(97,116,134,1) 100%)\",\r\n            }}\r\n          >\r\n            <div>Phone: {player.phone}</div>\r\n            <div>\r\n              Faction:{\" \"}\r\n              {player.faction\r\n                ? `${player.faction?.group?.faction_name} | [${player.faction?.member?.rank_level}] ${player.faction?.member?.rank_name}`\r\n                : `NO FACTION`}\r\n            </div>\r\n            <ActionButton\r\n              text=\"SELECT\"\r\n              onClick={() => {\r\n                props.setSelectedPlayer(player);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Page = (props) => {\r\n  const { NUI } = { ...props };\r\n  const { selectedPlayer, setSelectedPlayer } = useMainStore();\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const [players, setPlayers] = React.useState(undefined);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const reloadPage = () => {\r\n    setPlayers(undefined);\r\n\r\n    NUI(\"fetchPlayersList\", {}, [\r\n      {\r\n        source: 9,\r\n        citizen_id: 3,\r\n        display_name: \"Klicer\",\r\n        character_name: \"Pede Homo\",\r\n        phone: \"1234567\",\r\n        hex: \"steam:12345678\",\r\n        faction: {\r\n          group: { faction_name: \"LSPD\" },\r\n          member: { rank_name: \"Admin\", rank_level: 1000 },\r\n        },\r\n      },\r\n    ]).then((resp) => {\r\n      console.log(resp);\r\n      setPlayers(resp);\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    reloadPage();\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    NUI(\"selectCharacterFromCID\", { cid: data.cid }).then((data) => {\r\n      setSelectedPlayer(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"PageContent\"\r\n      style={{ display: props.show ? \"flex\" : \"none\" }}\r\n    >\r\n      {players !== undefined && (\r\n        <div\r\n          style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          <div style={{ color: \"white\" }}>\r\n            Selected Player:{\" \"}\r\n            {selectedPlayer\r\n              ? `(${selectedPlayer.source}) [${selectedPlayer.citizen_id}] ${selectedPlayer.character_name} | ${selectedPlayer.display_name} | ${selectedPlayer.hex}`\r\n              : \"none\"}\r\n          </div>\r\n          <form\r\n            style={{\r\n              marginTop: \"16px\",\r\n              marginBottom: \"8px\",\r\n              display: \"flex\",\r\n              color: \"white\",\r\n            }}\r\n            autoComplete=\"off\"\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            Select From CID:\r\n            <input\r\n              style={{ marginLeft: \"4px\" }}\r\n              type=\"number\"\r\n              {...register(\"cid\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"CID on tühi :/!\",\r\n                },\r\n              })}\r\n            />\r\n            <input type=\"submit\" value=\"SELECT\" style={{ marginLeft: \"4px\" }} />\r\n            {errors[\"cid\"] && (\r\n              <div style={{ color: \"var(--yellow)\", marginLeft: \"4px\" }}>\r\n                {errors[\"cid\"].message}\r\n              </div>\r\n            )}\r\n          </form>\r\n\r\n          {players.map((player) => {\r\n            return (\r\n              <Player player={player} setSelectedPlayer={setSelectedPlayer} />\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport { useMainStore } from \"./store\";\r\nimport sendNUI from \"./sendNUI\";\r\nimport { Button, createTheme } from \"@mui/material\";\r\nimport { ThemeProvider } from \"@mui/private-theming\";\r\n\r\nimport Actions from \"./Actions.jsx\";\r\nimport Players from \"./Players.jsx\";\r\n\r\nconst IS_PROD = process.env.NODE_ENV === \"production\";\r\n\r\nconst Main = (props) => {\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [canShow, updateShow] = React.useState(!IS_PROD);\r\n  const [minimized, setMinimized] = React.useState(false);\r\n\r\n  async function doNuiAction(action, data, mockAnswer, skipLoading) {\r\n    if (!skipLoading) {\r\n      setLoading(true);\r\n    }\r\n\r\n    const result = await sendNUI(action, data, mockAnswer);\r\n\r\n    if (!skipLoading) {\r\n      setLoading(false);\r\n    }\r\n\r\n    return result;\r\n  }\r\n  return (\r\n    <div className=\"Main\" style={{ width: minimized && \"30%\" }}>\r\n      <div className=\"Categories\">\r\n        <Button\r\n          className=\"CategoryButton\"\r\n          style={{\r\n            backgroundColor: props.page === \"actions\" ? \"#292929\" : \"#3e4652\",\r\n            color: \"white\",\r\n            borderRadius: \"0px\",\r\n          }}\r\n          onClick={() => {\r\n            props.setPage(\"actions\");\r\n          }}\r\n        >\r\n          ACTIONS\r\n        </Button>\r\n        <Button\r\n          className=\"CategoryButton\"\r\n          style={{\r\n            backgroundColor: props.page === \"players\" ? \"#292929\" : \"#3e4652\",\r\n            color: \"white\",\r\n            borderRadius: \"0px\",\r\n          }}\r\n          onClick={() => {\r\n            props.setPage(\"players\");\r\n          }}\r\n        >\r\n          PLAYERS\r\n        </Button>\r\n        <Button\r\n          className=\"CategoryButton\"\r\n          style={{\r\n            backgroundColor: props.page === \"bans\" ? \"#292929\" : \"#3e4652\",\r\n            color: \"white\",\r\n            borderRadius: \"0px\",\r\n          }}\r\n          onClick={() => {\r\n            props.setPage(\"bans\");\r\n          }}\r\n        >\r\n          BANS\r\n        </Button>\r\n      </div>\r\n      <div className=\"Content\">\r\n        <Actions NUI={doNuiAction} show={props.page === \"actions\"} />\r\n        <Players NUI={doNuiAction} show={props.page === \"players\"} />\r\n        {/* <Bans NUI={doNuiAction} show={props.page === \"bans\"} /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const [canShow, updateShow] = React.useState(!IS_PROD);\r\n  const { adminLevel, setAdminLevel } = useMainStore();\r\n  const [page, setPage] = React.useState(\"actions\");\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      mode: \"light\",\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"message\", (event) => {\r\n      if (event.data.show !== undefined) {\r\n        updateShow(event.data.show);\r\n      }\r\n      if (event.data.admin_level !== undefined) {\r\n        setAdminLevel(event.data.admin_level);\r\n      }\r\n    });\r\n\r\n    window.addEventListener(\"keydown\", (event) => {\r\n      if (event.key === \"Escape\") {\r\n        sendNUI(\"closeNui\", {}, () => {});\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\" style={{ display: canShow ? \"flex\" : \"none\" }}>\r\n      {adminLevel && (\r\n        <ThemeProvider theme={darkTheme}>\r\n          <Main page={page} setPage={setPage} />\r\n        </ThemeProvider>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}