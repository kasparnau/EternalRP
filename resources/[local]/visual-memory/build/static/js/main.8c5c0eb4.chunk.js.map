{"version":3,"sources":["doEvent.js","App.js","reportWebVitals.js","index.js"],"names":["doEvent","action","data","mockAnswer","Promise","resolve","fetch","process","method","headers","body","JSON","stringify","then","resp","json","Square","props","clicked","isClickedTile","col","row","correct","isCorrectTile","memorizing","className","style","backgroundColor","onClick","event","handleClick","getRandomInt","max","Math","floor","random","App","React","useState","visible","updateVisible","setMemorizing","requiredTiles","setRequiredTiles","rows","setRows","columns","setColumns","memorizingTimeout","useRef","defaultVal","value","state","setState","useEffect","updater","prevState","nextVal","useStateWithPromise","correctTiles","values","setValues","cTiles","i","length","tileList","vals","_generateCorrectTile","cols","generateNewCorrectTiles","tiles","name","newCorrectTiles","push","startGame","clearTimeout","current","setTimeout","console","log","memorizeTime","endGame","success","getTotalCorrectTiles","getTotalWrongTiles","wrong","window","addEventListener","undefined","show","play","Array","map","x","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c5c0eb4.chunk.js","sourcesContent":["const IS_PROD = process.env.NODE_ENV === 'production'\r\n\r\nfunction doEvent(action, data, mockAnswer) {\r\n    return new Promise(resolve => {\r\n        if (IS_PROD) {\r\n            fetch(`https://${process.env.REACT_APP_RESOURCE_NAME}/nuiAction`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=UTF-8',\r\n                },\r\n                body: JSON.stringify({\r\n                    action,\r\n                    data\r\n                })\r\n            }).then(resp => resp.json()).then((resp) => {\r\n                resolve(resp)\r\n            });\r\n        } else {\r\n            setTimeout(() => {\r\n                resolve(mockAnswer);\r\n            }, 50);\r\n        }\r\n    });\r\n}\r\n\r\nexport default doEvent","import \"./App.css\";\nimport React from \"react\";\nimport doEvent from \"./doEvent.js\";\n\nconst IS_PROD = process.env.NODE_ENV === \"production\";\n\nfunction Square(props) {\n  let clicked = props.isClickedTile(props.col, props.row);\n  let correct = props.isCorrectTile(props.col, props.row);\n  let col = \"\";\n\n  if (clicked) {\n    col = \"#ffffff\";\n  } else {\n    col = \"#2573c1\";\n  }\n\n  if (props.memorizing && correct) {\n    col = \"#ffffff\";\n  }\n\n  if (clicked && !correct) {\n    col = \"#154368\";\n  }\n\n  return (\n    <div\n      className=\"Button\"\n      style={{ backgroundColor: col }}\n      onClick={(event) => props.handleClick(props.col, props.row)}\n    />\n  );\n}\n\nconst useStateWithPromise = (defaultVal) => {\n  let [state, setState] = React.useState({\n    value: defaultVal,\n    resolve: () => {},\n  });\n\n  React.useEffect(() => {\n    state.resolve(state.value);\n  }, [state]);\n\n  return [\n    state.value,\n    (updater) => {\n      return new Promise((resolve) => {\n        setState((prevState) => {\n          let nextVal = updater;\n          if (typeof updater === \"function\") {\n            nextVal = updater(prevState.value);\n          }\n          return {\n            value: nextVal,\n            resolve,\n          };\n        });\n      });\n    },\n  ];\n};\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nfunction App() {\n  const [visible, updateVisible] = React.useState(!IS_PROD);\n  const [memorizing, setMemorizing] = React.useState(true);\n  const [requiredTiles, setRequiredTiles] = React.useState(0);\n  const [rows, setRows] = React.useState(0);\n  const [columns, setColumns] = React.useState(0);\n  const memorizingTimeout = React.useRef();\n\n  const [values, setValues] = useStateWithPromise({\n    clicked: [],\n    correctTiles: [],\n  });\n\n  function setValue(name, value) {\n    setValues({ ...values, [name]: value });\n  }\n\n  function isCorrectTile(col, row, correctTiles) {\n    let correct = false;\n    let cTiles = correctTiles ? correctTiles : values.correctTiles;\n    for (let i = 0; i < cTiles.length; i++) {\n      let data = cTiles[i];\n\n      if (data[0] === col && data[1] === row) {\n        correct = true;\n      }\n    }\n    return correct;\n  }\n\n  function isClickedTile(col, row, tileList) {\n    let clicked = false;\n    let vals = tileList ? tileList : values.clicked;\n\n    for (let i = 0; i < vals.length; i++) {\n      let data = vals[i];\n\n      if (data[0] === col && data[1] === row) {\n        clicked = true;\n      }\n    }\n\n    return clicked;\n  }\n\n  function _generateCorrectTile(cols, rows, tileList, correctTiles) {\n    let col = getRandomInt(cols);\n    let row = getRandomInt(rows);\n\n    if (isCorrectTile(col, row, tileList, correctTiles)) {\n      return _generateCorrectTile(cols, rows, tileList, correctTiles);\n    }\n\n    return [col, row];\n  }\n\n  function generateNewCorrectTiles(cols, rows, tiles, correctTiles) {\n    let newCorrectTiles = [];\n    for (let i = 0; i < tiles; i++) {\n      let [col, row] = _generateCorrectTile(\n        cols,\n        rows,\n        newCorrectTiles,\n        correctTiles\n      );\n\n      newCorrectTiles.push([col, row]);\n    }\n    setValue(\"correctTiles\", newCorrectTiles);\n  }\n\n  function startGame(data) {\n    setRequiredTiles(data.tiles);\n\n    setRows(data.rows);\n    setColumns(data.columns);\n\n    let newValues = {\n      clicked: [],\n      correctTiles: [],\n    };\n\n    setValues(newValues);\n    generateNewCorrectTiles(\n      data.columns,\n      data.rows,\n      data.tiles,\n      data.correctTiles\n    );\n    setMemorizing(true);\n\n    clearTimeout(memorizingTimeout.current);\n    memorizingTimeout.current = setTimeout(() => {\n      console.log(\"WAITED \" + data.memorizeTime);\n      setMemorizing(false);\n    }, data.memorizeTime);\n  }\n\n  function endGame(success) {\n    doEvent(\"endGame\", { success: success }, []).then(() => {\n      setColumns(0);\n      setRows(0);\n      setRequiredTiles(100);\n\n      let newValues = {\n        clicked: [],\n        correctTiles: [],\n      };\n\n      setValues(newValues);\n    });\n  }\n\n  React.useEffect(() => {\n    if (!IS_PROD) {\n      startGame({\n        rows: 5,\n        columns: 5,\n        tiles: 10,\n\n        memorizeTime: 2000,\n      });\n    }\n\n    window.addEventListener(\"message\", (event) => {\n      if (event.data.show !== undefined) {\n        if (!event.data.show) {\n          clearTimeout(memorizingTimeout.current);\n        }\n        updateVisible(event.data.show);\n      }\n      if (event.data.play !== undefined) {\n        startGame(event.data);\n      }\n    });\n\n    // window.addEventListener(\"keydown\", (event) => {\n    //   if (event.key === \"Escape\") {\n    //     if (visible) {\n    //       endGame(false);\n    //     }\n    //   }\n    // });\n  }, []);\n\n  function getTotalCorrectTiles() {\n    let correct = 0;\n    for (let i = 0; i < values.clicked.length; i++) {\n      if (isCorrectTile(values.clicked[i][0], values.clicked[i][1])) {\n        correct += 1;\n      }\n    }\n    return correct;\n  }\n\n  function getTotalWrongTiles() {\n    let wrong = 0;\n    for (let i = 0; i < values.clicked.length; i++) {\n      if (!isCorrectTile(values.clicked[i][0], values.clicked[i][1])) {\n        wrong += 1;\n      }\n    }\n    return wrong;\n  }\n\n  function handleClick(col, row) {\n    let clicked = isClickedTile(col, row);\n    if (memorizing || clicked) {\n      return;\n    }\n    setValues((values) => {\n      let correct = isCorrectTile(col, row);\n      if (!correct) {\n        let totalWrongTiles = getTotalWrongTiles() + 1;\n        if (totalWrongTiles === 3) {\n          endGame(false);\n        }\n      } else {\n        let totalCorrectTiles = getTotalCorrectTiles() + 1;\n        if (totalCorrectTiles === requiredTiles) {\n          endGame(true);\n        }\n      }\n\n      return { ...values, clicked: [...values.clicked, [col, row]] };\n    });\n  }\n\n  return (\n    <div>\n      {visible && (\n        <div className=\"App\">\n          <div className=\"Main\">\n            <div className=\"ItemsHolder\">\n              {[...Array(columns)].map((x, col) => (\n                <div className=\"Row\">\n                  {[...Array(rows)].map((x, row) => (\n                    <Square\n                      row={row}\n                      col={col}\n                      values={values}\n                      handleClick={handleClick}\n                      isClickedTile={isClickedTile}\n                      isCorrectTile={isCorrectTile}\n                      memorizing={memorizing}\n                    />\n                  ))}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}