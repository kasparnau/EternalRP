{"version":3,"sources":["NewCharacterModal.jsx","doEvent.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","color","maleButton","backgroundColor","femaleButton","NewCharacterModal","props","closeModal","values","setValue","classes","style","height","weight","display","alignItems","justifyContent","Button","width","marginRight","gender","className","onClick","marginLeft","marginTop","FormControl","variant","InputLabel","htmlFor","FilledInput","id","value","first_name","onChange","event","target","last_name","marginBottom","TextField","label","type","defaultValue","born","textField","InputLabelProps","shrink","createError","handleCreate","disabled","createButtonDisabled","doEvent","action","data","mockAnswer","Promise","resolve","fetch","process","method","headers","body","JSON","stringify","then","resp","json","App","React","useState","visible","updateVisible","setCharacters","loading","setLoading","newModalOpen","openNewModal","setButtonDisabled","setCreateError","setValues","undefined","current","setCurrent","reloadCharacters","character_id","character_name","date_of_birth","faction","group","faction_name","member","rank_name","rank_level","job","phone_number","dead","prison","result","canCreate","c1","length","c2","c3","c4","Date","useEffect","window","addEventListener","show","firstTime","getCreateError","onMouseDown","e","x","clientX","y","clientY","size","Fragment","borderRadius","fullWidth","citizen_id","cid","isOpen","onRequestClose","overlay","name","replace","charAt","toUpperCase","slice","toLowerCase","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","darkTheme","createMuiTheme","palette","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.96a7dc62.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  FilledInput,\r\n  FormControl,\r\n  InputLabel,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiTypography-colorTextSecondary\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiInputLabel-formControl\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiFilledInput-input\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n  maleButton: {\r\n    backgroundColor: \"hsla(208, 100%, 50%, 0.1)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"hsla(208, 100%, 50%, 0.3)\",\r\n    },\r\n  },\r\n  femaleButton: {\r\n    backgroundColor: \"hsla(333, 100%, 50%, 0.1)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"hsla(333, 100%, 50%, 0.3)\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction NewCharacterModal(props) {\r\n  const { closeModal, values, setValue } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ height: \"100%\", weight: \"100%\" }}>\r\n      {/* <div className=\"ModalTopbar\"></div> */}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Button\r\n          style={{\r\n            width: \"50%\",\r\n            marginRight: \"5px\",\r\n            backgroundColor:\r\n              values.gender === \"male\" && \"hsla(208, 100%, 50%, 0.5)\",\r\n          }}\r\n          className={classes.maleButton}\r\n          onClick={() => {\r\n            setValue(\"gender\", \"male\");\r\n          }}\r\n        >\r\n          MEES\r\n        </Button>\r\n        <Button\r\n          style={{\r\n            width: \"50%\",\r\n            marginLeft: \"5px\",\r\n            backgroundColor:\r\n              values.gender === \"female\" && \"hsla(333, 100%, 50%, 0.5)\",\r\n          }}\r\n          className={classes.femaleButton}\r\n          onClick={() => {\r\n            setValue(\"gender\", \"female\");\r\n          }}\r\n        >\r\n          NAINE\r\n        </Button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginTop: \"5%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <FormControl\r\n          style={{ width: \"100%\" }}\r\n          variant=\"filled\"\r\n          className={classes.root}\r\n        >\r\n          <InputLabel htmlFor=\"filled-adornment-amount\">Eesnimi</InputLabel>\r\n          <FilledInput\r\n            id=\"filled-adornment-amount\"\r\n            value={values.first_name}\r\n            onChange={(event) => {\r\n              setValue(\"first_name\", event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          marginTop: \"5%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <FormControl\r\n          style={{ width: \"100%\" }}\r\n          variant=\"filled\"\r\n          className={classes.root}\r\n        >\r\n          <InputLabel htmlFor=\"filled-adornment-amount\">Sugunimi</InputLabel>\r\n          <FilledInput\r\n            id=\"filled-adornment-amount\"\r\n            value={values.last_name}\r\n            onChange={(event) => {\r\n              setValue(\"last_name\", event.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginTop: \"5%\",\r\n          marginBottom: \"10%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <TextField\r\n          style={{ width: \"100%\" }}\r\n          id=\"date\"\r\n          label=\"Sünnipäev\"\r\n          type=\"date\"\r\n          defaultValue=\"2000-01-01\"\r\n          value={values.born}\r\n          onChange={(event) => {\r\n            setValue(\"born\", event.target.value);\r\n          }}\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      </div>\r\n      {props.createError && (\r\n        <div style={{ color: \"#D17D00\" }}>{props.createError}</div>\r\n      )}\r\n      {/* FINALIZE: */}\r\n      <div\r\n        style={{\r\n          marginTop: \"16px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Button\r\n          style={{\r\n            width: \"50%\",\r\n            backgroundColor: \"#ce8e4c\",\r\n            marginRight: \"5px\",\r\n          }}\r\n          onClick={closeModal}\r\n        >\r\n          TÜHISTA\r\n        </Button>\r\n        <Button\r\n          onClick={props.handleCreate}\r\n          disabled={props.createButtonDisabled}\r\n          style={{\r\n            width: \"50%\",\r\n            backgroundColor: \"rgb(37 146 81)\",\r\n            marginLeft: \"5px\",\r\n          }}\r\n        >\r\n          LOO KARAKTER\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewCharacterModal;\r\n","const IS_PROD = process.env.NODE_ENV === \"production\";\r\n\r\nfunction doEvent(action, data, mockAnswer) {\r\n  return new Promise((resolve) => {\r\n    if (IS_PROD) {\r\n      fetch(`https://${process.env.REACT_APP_RESOURCE_NAME}/nuiAction`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json; charset=UTF-8\",\r\n        },\r\n        body: JSON.stringify({\r\n          action,\r\n          data,\r\n        }),\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((resp) => {\r\n          resolve(resp);\r\n        });\r\n    } else {\r\n      setTimeout(() => {\r\n        resolve(mockAnswer);\r\n      }, 500);\r\n    }\r\n  });\r\n}\r\n\r\nexport default doEvent;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport Spinner from \"react-spinners/RotateLoader\";\r\n\r\nimport NewCharacterModal from \"./NewCharacterModal.jsx\";\r\nimport doEvent from \"./doEvent.js\";\r\n\r\nconst IS_PROD = process.env.NODE_ENV === \"production\";\r\n\r\nfunction SlotText(props) {\r\n  return (\r\n    <div\r\n      className=\"CharacterSlotMiddleText\"\r\n      style={{ color: props.color && props.color }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [visible, updateVisible] = React.useState(!IS_PROD);\r\n  const [characters, setCharacters] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const [newModalOpen, openNewModal] = React.useState(false);\r\n  const [createButtonDisabled, setButtonDisabled] = React.useState(true);\r\n  const [createError, setCreateError] = React.useState(\"\");\r\n\r\n  const [values, setValues] = React.useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    gender: \"\",\r\n    born: \"2000-01-01\",\r\n  });\r\n\r\n  const [current, setCurrent] = React.useState(undefined);\r\n\r\n  function setValue(name, value) {\r\n    if (name == \"first_name\" || name == \"last_name\") {\r\n      value = value.replace(/\\s+/g, \"\");\r\n      value = value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\r\n      value = value.replace(/[0-9]/g, \"\");\r\n    }\r\n    setValues({ ...values, [name]: value });\r\n  }\r\n\r\n  function reloadCharacters() {\r\n    setCurrent(undefined);\r\n    setLoading(true);\r\n    doEvent(\r\n      \"fetchCharacters\",\r\n      [],\r\n      [\r\n        {\r\n          character_id: 3,\r\n          character_name: \"Pede Homo\",\r\n          gender: 0,\r\n          date_of_birth: \"1999-01-01\",\r\n          faction: {\r\n            group: {\r\n              faction_name: \"LSPD\",\r\n            },\r\n            member: {\r\n              rank_name: \"Chief of Police\",\r\n              rank_level: 100,\r\n            },\r\n          },\r\n          job: \"\",\r\n          phone_number: 396543813,\r\n          dead: null,\r\n          prison: null,\r\n        },\r\n        {\r\n          character_id: 4,\r\n          character_name: \"Barack Obama\",\r\n          gender: 0,\r\n          date_of_birth: \"1999-01-01\",\r\n          faction: null,\r\n          job: \"\",\r\n          phone_number: 133623245,\r\n          dead: null,\r\n          prison: true,\r\n        },\r\n        {\r\n          character_id: 5,\r\n          character_name: \"Uuga Buuga\",\r\n          gender: 0,\r\n          date_of_birth: \"1992-06-31\",\r\n          faction: null,\r\n          job: \"\",\r\n          phone_number: 133623245,\r\n          dead: null,\r\n          prison: null,\r\n        },\r\n      ]\r\n    ).then((result) => {\r\n      setCharacters(result);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"message\", (event) => {\r\n      if (event.data.show !== undefined) {\r\n        updateVisible(event.data.show);\r\n      }\r\n      if (event.data.setCurrent !== undefined) {\r\n        setCurrent(event.data.setCurrent);\r\n      }\r\n      if (event.data.firstTime !== undefined) {\r\n        openNewModal(true);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (visible) {\r\n      reloadCharacters();\r\n    }\r\n  }, [visible]);\r\n\r\n  function closeModal() {\r\n    openNewModal(false);\r\n  }\r\n\r\n  function canCreate() {\r\n    let c1 = values.first_name.length >= 3 && values.first_name.length <= 25;\r\n    let c2 = values.last_name.length >= 3 && values.last_name.length <= 25;\r\n    let c3 = values.gender === \"female\" || values.gender === \"male\";\r\n    let c4 =\r\n      new Date(values.born) < new Date(\"2000-01-02\") &&\r\n      new Date(values.born) > new Date(\"1899-12-31\");\r\n\r\n    return c1 && c2 && c3 && c4;\r\n  }\r\n\r\n  function getCreateError() {\r\n    let c1 = values.first_name.length >= 3 && values.first_name.length <= 25;\r\n    let c2 = values.last_name.length >= 3 && values.last_name.length <= 25;\r\n    let c3 = values.gender === \"female\" || values.gender === \"male\";\r\n    let c4 =\r\n      new Date(values.born) < new Date(\"2000-01-02\") &&\r\n      new Date(values.born) > new Date(\"1899-12-31\");\r\n\r\n    if (!c3) {\r\n      return \"Vali sugupool!\";\r\n    }\r\n    if (!c1) {\r\n      return \"Vali eesnimi!\";\r\n    }\r\n    if (!c2) {\r\n      return \"Vali sugunimi!\";\r\n    }\r\n    if (!c4) {\r\n      return \"Vali sünnipäev. (Peab olema vanem kui 2000)\";\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setButtonDisabled(!canCreate());\r\n    setCreateError(getCreateError());\r\n  }, [values]);\r\n\r\n  function handleCreate() {\r\n    if (canCreate()) {\r\n      openNewModal(false);\r\n      doEvent(\r\n        \"createCharacter\",\r\n        {\r\n          first_name: values.first_name,\r\n          last_name: values.last_name,\r\n          gender: values.gender,\r\n          born: values.born,\r\n        },\r\n        []\r\n      ).then(() => {\r\n        reloadCharacters();\r\n      });\r\n    }\r\n  }\r\n\r\n  function selectCharacter(citizen_id) {\r\n    setLoading(true);\r\n    doEvent(\"selectCharacter\", { citizen_id }, []);\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    doEvent(\r\n      \"click\",\r\n      {\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n      },\r\n      true\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {visible && (\r\n        <div className=\"App\" onMouseDown={handleClick}>\r\n          <div className=\"Main\">\r\n            {loading && (\r\n              <div className=\"Spinner\">\r\n                <Spinner color=\"white\" size={15} loading={loading} />\r\n              </div>\r\n            )}\r\n            {!loading && (\r\n              <React.Fragment>\r\n                <div\r\n                  className=\"Top\"\r\n                  style={{ display: newModalOpen ? \"none\" : \"flex\" }}\r\n                >\r\n                  <div className=\"Selected\">\r\n                    <div className=\"SelectedInner\">\r\n                      <div className=\"SelectedContent\">\r\n                        {current === undefined\r\n                          ? `Vali Karakter`\r\n                          : `${current.first_name} ${current.last_name}`}\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          width: \"100%\",\r\n                          height: \"6px\",\r\n                          backgroundColor: \"white\",\r\n                        }}\r\n                      />\r\n                      <div className=\"SelectedContent\">\r\n                        <Button\r\n                          style={{\r\n                            backgroundColor:\r\n                              current !== undefined\r\n                                ? \"hsl(144, 60%, 36%)\"\r\n                                : \"hsla(144, 60%, 36%, 0.541)\",\r\n                            color: current !== undefined ? \"white\" : \"#c0c0c0\",\r\n                            borderRadius: \"8px\",\r\n                          }}\r\n                          fullWidth\r\n                          disabled={current === undefined}\r\n                          onClick={() => {\r\n                            selectCharacter(current.cid);\r\n                          }}\r\n                        >\r\n                          MÄNGI\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* <div style={{ padding: \"1rem\" }}>\r\n                    Liitu meie discordiga @ https://discord.io/eternalinvite :)\r\n                  </div> */}\r\n                </div>\r\n                <div className=\"Middle\"></div>\r\n                {/*\r\n                <div className=\"Characters\">\r\n                  {characters.length > 0 &&\r\n                    characters.map((character) => {\r\n                      return (\r\n                        <div className=\"CharacterSlot\">\r\n                          <div className=\"CharacterSlotTop\">\r\n                            <Typography\r\n                              variant=\"h6\"\r\n                              style={{\r\n                                color: \"white\",\r\n                              }}\r\n                            >\r\n                              {character.character_name}\r\n                            </Typography>\r\n                          </div>\r\n                          <div className=\"CharacterSlotMiddle\">\r\n                            <SlotText>\r\n                              Kodaniku ID: {character.character_id}\r\n                            </SlotText>\r\n                            {character.faction && (\r\n                              <SlotText>\r\n                                {character.faction.group.faction_name} |{\" \"}\r\n                                {character.faction.member.rank_name}\r\n                              </SlotText>\r\n                            )}\r\n                            {!character.faction && (\r\n                              <SlotText>Pole Grupeeringut</SlotText>\r\n                            )}\r\n                            <SlotText>\r\n                              {character.gender === 0 ? \"Mees\" : \"Naine\"}\r\n                            </SlotText>\r\n                            <SlotText>{character.date_of_birth}</SlotText>\r\n                            {character.dead && (\r\n                              <SlotText color=\"red\">HAIGLAS</SlotText>\r\n                            )}\r\n                            {character.prison && (\r\n                              <SlotText color=\"red\">VANGLAS</SlotText>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"CharacterSlotBottom\">\r\n                            <Button\r\n                              style={{\r\n                                backgroundColor: \"hsl(144, 60%, 36%)\",\r\n                                color: \"white\",\r\n                                width: \"100%\",\r\n                                margin: \"6px\",\r\n                              }}\r\n                              onClick={() => {\r\n                                selectCharacter(character.character_id);\r\n                              }}\r\n                            >\r\n                              MÄNGI\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  {characters.length === 0 && (\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        fontFamily: \"Roboto\",\r\n                        fontSize: \"1.5rem\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Sul pole ühtegi karakteri.\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                */}\r\n                <div\r\n                  className=\"Bottom\"\r\n                  style={{ display: newModalOpen ? \"none\" : \"flex\" }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      backgroundColor: \"hsl(144, 60%, 36%)\",\r\n                      color: \"white\",\r\n                    }}\r\n                    onClick={() => {\r\n                      openNewModal(true);\r\n                    }}\r\n                  >\r\n                    UUS KARAKTER\r\n                  </Button>\r\n                </div>\r\n                {newModalOpen && (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Modal\r\n                      className=\"Modal\"\r\n                      isOpen={newModalOpen}\r\n                      onRequestClose={closeModal}\r\n                      style={{\r\n                        overlay: {\r\n                          backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      <div className=\"ModalContainer\">\r\n                        <NewCharacterModal\r\n                          handleCreate={handleCreate}\r\n                          createButtonDisabled={createButtonDisabled}\r\n                          createError={createError}\r\n                          closeModal={() => {\r\n                            openNewModal(false);\r\n                          }}\r\n                          values={values}\r\n                          setValue={setValue}\r\n                        />\r\n                      </div>\r\n                    </Modal>\r\n                  </div>\r\n                )}\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={darkTheme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}