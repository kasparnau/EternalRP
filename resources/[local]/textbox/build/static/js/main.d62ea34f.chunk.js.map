{"version":3,"sources":["sendNUI.js","Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["IS_PROD","undefined","window","invokeNative","sendNUI","action","data","mockAnswer","Promise","resolve","fetch","method","headers","body","JSON","stringify","then","resp","json","setTimeout","Main","props","className","style","color","height","width","display","flexDirection","justifyContent","fontFamily","margin","items","map","item","TextField","marginBottom","id","label","InputLabelProps","shrink","onChange","event","updateValues","values","value","val","target","Button","backgroundColor","onClick","darkTheme","createMuiTheme","palette","type","App","React","useState","canShow","updateShow","updateItems","useEffect","addEventListener","show","console","log","vals","forEach","push","key","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d62ea34f.chunk.js","sourcesContent":["const IS_PROD = window.invokeNative !== undefined\r\n\r\nfunction sendNUI(action, data, mockAnswer) {\r\n    return new Promise(resolve => {\r\n        if (IS_PROD) {\r\n            fetch(`https://textbox/nuiAction`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=UTF-8',\r\n                },\r\n                body: JSON.stringify({\r\n                    action,\r\n                    data\r\n                })\r\n            }).then(resp => resp.json()).then((resp) => {\r\n                resolve(resp)\r\n            });\r\n        } else {\r\n            setTimeout(() => {\r\n                resolve(mockAnswer);\r\n            }, 100);\r\n        }\r\n    });\r\n}\r\n\r\nexport default sendNUI","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport sendNUI from './sendNUI.js';\r\n\r\nexport default function Main(props){\r\n    return (\r\n        <div className=\"Main\">\r\n            <div style={{color: 'white', height: '100%', width: '100%'}}>\r\n                <div className=\"Middle\">\r\n                    <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', fontFamily: 'Arial, sans-serif', margin: '8px'}}>\r\n                        {props.items.map((item => {\r\n                            return (\r\n                                <TextField\r\n                                    style={{marginBottom: '8px'}}\r\n                                    id=\"custom-css-standard-input\" \r\n                                    label={item.label} \r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    onChange={(event) => {\r\n                                        props.updateValues((values) => {\r\n                                            values.map((value) => {\r\n                                                if (value.id === item.id) {\r\n                                                    value.val = event.target.value\r\n                                                }\r\n                                                return value\r\n                                            })\r\n                                            return values\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            )\r\n                        }))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"BottomRow\">\r\n                    <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', fontFamily: 'Arial, sans-serif', margin: '8px'}}>\r\n                        <Button \r\n                            style={{color: 'white', backgroundColor: 'green'}}\r\n                            onClick={() => {\r\n                                sendNUI(\"submit\", {values: props.values}, () => {})\r\n                              }}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport Main from './Main.jsx'\nimport React from 'react';\nimport sendNUI from './sendNUI.js';\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport {ThemeProvider} from '@material-ui/core/styles';\n\nconst IS_PROD = window.invokeNative !== undefined\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nfunction App() {\n  const [canShow, updateShow] = React.useState(!IS_PROD)\n  const [items, updateItems] = React.useState([])\n  const [values, updateValues] = React.useState([])\n\n  // const [items, updateItems] = React.useState([\n  //   {\n  //     label: 'Bet Amount',\n  //     id: \"Amount\"\n  //   },\n  //   {\n  //     label: 'Bet ID',\n  //     id: \"betId\"\n  //   },\n  //   {\n  //     label: 'Bet ID 2',\n  //     id: \"betId2\"\n  //   },\n  // ])\n  // const [values, updateValues] = React.useState([\n  //     {\n  //       val: '',\n  //       id: \"Amount\"\n  //     },\n  //     {\n  //       val: '',\n  //       id: \"betId\"\n  //     },\n  //     {\n  //       val: '',\n  //       id: \"betId2\"\n  //     },\n      \n  // ])\n\n  React.useEffect(() => {\n    window.addEventListener(\"message\", ((event) => {\n      if (event.data.show != null) {\n        updateShow(event.data.show)\n      }\n      if (event.data.items != null) {\n        console.log(event.data)\n        updateItems(event.data.items)\n        updateValues(() => {\n          let vals = []\n          event.data.items.forEach((item) => {\n            vals.push({\n              id: item.id,\n              val: \"\"\n            })\n          })\n          return vals\n        })\n      }\n    }))\n\n    window.addEventListener(\"keydown\", ((event) => {\n      if (event.key === 'Escape') {\n          sendNUI(\"close\", {}, () => {})\n          updateItems([])\n          updateValues([])\n      }\n  }))\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {canShow && (\n        <ThemeProvider theme={darkTheme}>\n          <Main\n            items={items}\n            updateValues={updateValues}\n            values={values}\n          />\n        </ThemeProvider>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}