{"version":3,"sources":["sendNUI.js","App.js","reportWebVitals.js","index.js"],"names":["sendNUI","action","data","cb","fetch","method","headers","body","JSON","stringify","then","resp","json","MenuButton","props","className","onClick","event","params","children","setHistory","oldHistory","newHistory","push","currentList","setList","goBack","class","title","desc","App","React","useState","currentHistory","visible","setVisible","setTitle","useEffect","window","addEventListener","show","list","key","style","display","length","marginBottom","lastPage","slice","map","listItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAiBeA,MAff,SAAiBC,EAAQC,EAAMC,GAC3BC,MAAM,4BAA6B,CAC/BC,OAAQ,OACRC,QAAS,CACL,eAAgB,mCAEpBC,KAAMC,KAAKC,UAAU,CACjBR,SACAC,WAELQ,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAAQF,MAAK,SAACC,GAC/BR,EAAGQ,O,OCTX,SAASE,EAAWC,GAClB,OACE,sBACEC,UAAU,aACVC,QAASF,EAAME,QAAUF,EAAME,QAAU,WACnCF,EAAMG,OACRjB,EAAQ,gBAAiB,CACvBiB,MAAOH,EAAMG,MACbC,OAAQJ,EAAMI,SACb,eAEDJ,EAAMK,WACRL,EAAMM,YAAW,SAACC,GAChB,IAAIC,EAAaD,EAGjB,OAFAC,EAAWC,KAAKT,EAAMU,aAEfF,KAGTR,EAAMW,QAAQX,EAAMK,YAjB1B,UAqBKL,EAAMY,QACL,qBAAKX,UAAU,iBAAf,SACI,8BACE,mBAAGY,MAAM,4BAInB,sBAAKZ,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAAf,SACGD,EAAMc,QAERd,EAAMe,MACL,qBAAKd,UAAU,wBAAf,SACGD,EAAMe,UAIVf,EAAMK,UACL,qBAAKJ,UAAU,iBAAf,SACI,8BACE,mBAAGY,MAAM,gCA+GVG,MAvGf,WAAgB,IAAD,EACwBC,IAAMC,SAAS,IADvC,mBACNC,EADM,KACUb,EADV,OAEkBW,IAAMC,SAAS,IAFjC,mBAENR,EAFM,KAEOC,EAFP,OAsCiBM,IAAMC,UAAS,GAtChC,mBAsCNE,EAtCM,KAsCGC,EAtCH,OAuCaJ,IAAMC,SAAS,SAvC5B,mBAuCNJ,EAvCM,KAuCCQ,EAvCD,KA+Db,OAtBAL,IAAMM,WAAU,WACdC,OAAOC,iBAAiB,WAAY,SAACtB,GACZ,MAAnBA,EAAMf,KAAKsC,MACbL,EAAWlB,EAAMf,KAAKsC,MAED,MAAnBvB,EAAMf,KAAKuC,OACbrB,EAAW,IACXK,EAAQR,EAAMf,KAAKuC,OAEG,MAApBxB,EAAMf,KAAK0B,OACbQ,EAASnB,EAAMf,KAAK0B,UAIxBU,OAAOC,iBAAiB,WAAY,SAACtB,GAClB,UAAbA,EAAMyB,KACR1C,EAAQ,OAAQ,IAAI,oBAIvB,IAGD,sBAAKe,UAAU,MAAM4B,MAAO,CAACC,QAASV,EAAU,QAAU,QAA1D,UACE,qBAAKnB,UAAU,QAAf,SACGa,IAEH,sBAAKb,UAAU,UAAf,UACGkB,EAAeY,OAAS,GACvB,qBAAKF,MAAO,CAACG,aAAc,QAA3B,SACE,cAACjC,EAAD,CACEa,QAAM,EACNE,MAAM,UACNZ,QAAS,WACP,IAAM+B,EAAWd,EAAeA,EAAeY,OAAS,GACxDpB,EAAQsB,GAER3B,GAAW,SAACC,GAIV,OAHcA,EACc2B,MAAM,EAAG3B,EAAWwB,OAAS,WAQlErB,EAAYyB,KAAI,SAACC,GAChB,OACE,cAACrC,EAAD,2BACMqC,GADN,IAEEzB,QAASA,EACTL,WAAYA,EACZI,YAAaA,eCzIZ2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.688d6baa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction sendNUI(action, data, cb) {\r\n    fetch(`https://jp-menu/nuiAction`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json; charset=UTF-8',\r\n        },\r\n        body: JSON.stringify({\r\n            action,\r\n            data\r\n        })\r\n    }).then(resp => resp.json()).then((resp) => {\r\n        cb(resp)\r\n    });\r\n}\r\n\r\nexport default sendNUI","import './App.css';\nimport React from 'react';\nimport sendNUI from './sendNUI.js';\n\nfunction MenuButton(props) {\n  return (\n    <div\n      className=\"MenuButton\"\n      onClick={props.onClick ? props.onClick : () => {\n        if (props.event) {\n          sendNUI('buttonClicked', {\n            event: props.event,\n            params: props.params\n          }, () => {})\n        }\n        if (props.children) {\n          props.setHistory((oldHistory) => {\n            let newHistory = oldHistory\n            newHistory.push(props.currentList)\n\n            return newHistory\n          })\n\n          props.setList(props.children)\n        }\n      }}\n    >\n        {props.goBack && (\n          <div className=\"ArrowContainer\">\n              <div>\n                <i class=\"fas fa-chevron-left\"></i>\n              </div>\n          </div>\n        )}\n      <div className=\"TextContainer\">\n        <div className=\"MenuButtonTitle\">\n          {props.title}\n        </div>\n        {props.desc && (\n          <div className=\"MenuButtonDescription\">\n            {props.desc}\n          </div>\n        )}\n      </div>\n        {props.children && (\n          <div className=\"ArrowContainer\">\n              <div>\n                <i class=\"fas fa-chevron-right\"></i>\n              </div>\n          </div>\n        )}\n    </div>\n  )\n}\n\nfunction App() {\n  const [currentHistory, setHistory] = React.useState([])\n  const [currentList, setList] = React.useState([])\n\n    // [\n    //   {\n    //     \"title\": '2 | Menu Option',\n    //     \"desc\": 'click on this wow'\n    //   },\n    //   {\n    //     \"title\": 'Menu Option420',\n    //   },\n    //   {\n    //     \"title\": 'SubMenu 1',\n    //     \"desc\": 'click on this to open submenu :O',\n    //     \"children\": [\n    //         {\n    //           \"title\": 'Menu Button inside the submenu',\n    //           \"desc\": 'click on this wow'\n    //         },\n    //         {\n    //           \"title\": 'nested SubMenu',\n    //           \"desc\": 'click on this to open another one',\n    //           \"children\": [\n    //             {\n    //               \"title\": 'Menu Option420',\n    //               \"desc\": 'click on this wow'\n    //             },\n    //             {\n    //               \"title\": 'Menu Option420',\n    //               \"desc\": 'click on this wow'\n    //             },\n    //           ]    \n    //         },\n    //       ]\n    //     },\n    //   ]\n  \n  const [visible, setVisible] = React.useState(false)\n  const [title, setTitle] = React.useState(\"Title\")\n\n  React.useEffect(() => {\n    window.addEventListener(\"message\", ((event) => {\n      if (event.data.show != null) {\n        setVisible(event.data.show)\n      }\n      if (event.data.list != null)  {\n        setHistory([])\n        setList(event.data.list)\n      }\n      if (event.data.title != null) {\n        setTitle(event.data.title)\n      }\n    }))\n\n    window.addEventListener(\"keydown\", ((event) => {\n      if (event.key == 'Escape' ) {\n        sendNUI(\"hide\", {}, () => {})\n      }\n    }))\n\n  }, [])\n\n  return (\n    <div className=\"App\" style={{display: visible ? 'block' : 'none'}}>\n      <div className=\"Title\">\n        {title}\n      </div>\n      <div className=\"Buttons\">\n        {currentHistory.length > 0 && (\n          <div style={{marginBottom: '18px'}}>\n            <MenuButton\n              goBack\n              title=\"Go Back\"\n              onClick={() => {\n                const lastPage = currentHistory[currentHistory.length - 1];\n                setList(lastPage);\n\n                setHistory((oldHistory) => {\n                  let history = oldHistory\n                  const nextHistory = history.slice(0, oldHistory.length - 2);\n                  \n                  return nextHistory;\n                })\n              }}\n            />\n          </div>\n        )}\n        {currentList.map((listItem) => {\n          return (\n            <MenuButton \n              {...listItem}\n              setList={setList}\n              setHistory={setHistory}\n              currentList={currentList}\n            />\n          )    \n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}